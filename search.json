[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "This site provides access to technical reports related to the Recreational Potential model for Scotland, which was developed by the UK Centre for Ecology & Hydrology as part of the BioDT project.\n\n\nThe Summary document provides a high-level overview of the Recreational Model and the research context in which it came about.\nThe Technical Supplement goes into greater detail regarding the data, code and mathematics underpinning the model. This document would be useful for someone aiming to understand the full process, starting from the download of ‘raw’ datasets, and following through all the way to the final output values.\nThe Developers’ Report provides an account of development work carried out between November 2024 and June 2025, and makes detailed recommendations for further development work. It would be useful for someone intending to continue development of this model.\nThe Worked Example demonstrates basic usage of the model in R."
  },
  {
    "objectID": "index.html#access-to-code-data",
    "href": "index.html#access-to-code-data",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Access to code & data",
    "text": "Access to code & data\n\nCode for the Recreational Potential model is available as an R Package hosted on GitHub at https://github.com/BioDT/uc-ces-recreation. These reports relate specifically to the version 1.0 release, which is also available on Zenodo at https://doi.org/10.5281/zenodo.15705544.\nThe model requires some input data that is too large to be bundled in with the package, but which can be downloaded from Dropbox after package installation using biodt.recreation::download_data(). This data is also included in the Zenodo listing.\nThe source for these documents and this website can be found at https://github.com/BioDT/ces-recreation-reports."
  },
  {
    "objectID": "index.html#funding",
    "href": "index.html#funding",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Funding",
    "text": "Funding\n\nFunding for OpenNESS came from the European Community’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no 308428, OpenNESS Project (Operationalisation of Natural Capital and Ecosystem Services: From Concepts to Real-world Applications.)\nFunding for BioDT came from the European Union’s Horizon Europe Research and Innovation Programme under grant agreement No 101057437 (BioDT project, https://doi.org/10.3030/101057437). Views and opinions expressed are those of the author(s) only and do not necessarily reflect those of the European Union or the European Commission. Neither the European Union nor the European Commission can be held responsible for them.\nFunding for SPEAK came from the Natural Environment Research Council – Growing Shoots Partnership and application co-creation bursary. NE/Y005805/1 _Growing Shoots."
  },
  {
    "objectID": "index.html#credit-statement",
    "href": "index.html#credit-statement",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "CRediT statement",
    "text": "CRediT statement\n\nJMR: software; visualisation; writing. MT: software; visualisation; writing. CA: conceptualisation; data curation; funding acquisition; software. JD: conceptualisation; funding acquisition; project administration. SR: funding acquisition; software."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nWe wish to acknowledge significant contributions to a previous version of the Recreational Potential model by Will Bolton. JMR would also like to thank Tomáš Martinovič for assisting with understanding the requirements of BioDT.\nWe are very grateful to all the participants of the SPEAK project which this output is based on including: Alastair Leaver, Alice MacSporran, Brian Cassidy, Chris Pollock, David Giles, Jean Cowie, Joanna Gilliatt, Justyna Olszewska, Laura Taylor, Maddi Bunker, Rebecca MacLennan, S Mayes, Shaila Rao, Steve MacKinnon and Tom Gebbie, Active Stirling. We are equally grateful to an additional 18 participants who preferred to remain anonymous."
  },
  {
    "objectID": "index.html#correspondence",
    "href": "index.html#correspondence",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Correspondence",
    "text": "Correspondence\n\n\n{jand,chan}@ceh.ac.uk for enquiries relating to the BioDT or SPEAK projects, or ongoing and future work.\nchan@ceh.ac.uk for enquiries relating to the data sources and QGIS processing.\n{joemar,madtig}@ceh.ac.uk for enquiries relating to the code and anything else appearing in the technical supplement and/or developer’s report.\nsimrol@ceh.ac.uk for enquiries relating to the biodiversity component of the BioDT project."
  },
  {
    "objectID": "dev_report.html",
    "href": "dev_report.html",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "The Recreational Potential model has had a complicated history of development involving several individuals working independently in different languages (QGIS, Python and R).\nAs of November 2024, the model existed as an interactive Shiny app written in the R language. The actual computation of RP was deeply intertwined with Shiny app code and pre-processing of raster data, although much of it was factored out into functions.\nThe user could load, edit and save personas which were stored in a single .csv file. They could then choose between a selection of geographical areas to run the model, corresponding to a collection of shapefiles stored alongside the code.\nAs well as the persona .csv and shapefiles, the model required input data in the form of raster files (.tif extension) covering Scotland at 20 metre resolution. For the most part (with the exception of the slope layer) these raster were integer-valued, with different integers corresponding to different categories of land cover. For example, each pixel in the Water_Lakes layer could take any of the following values:\n\n\n\nRaster Value\nCorresponding Feature\n\n\n\n\n5\nPond\n\n\n1\nLochan\n\n\n4\nSmall Loch\n\n\n2\nMedium Loch\n\n\n3\nLarge Loch\n\n\n6\nMajor Loch\n\n\n0 or NA\nNo feature present\n\n\n\nBoth code and data were held on NERC DataLabs, a browser-based service for environmental data science resembling JupyterHub and Google Colab in which Jasmin users can run instances of R Studio and publish Shiny apps.\nParts of the code were being tracked using git, with the remote living in a private (but now public) repository within the BioDT GitHub organisation, although the most up-to-date code on DataLabs was several weeks ahead of the most recent commit.\n\n\n\nThe objective of the SPEAK study was to gain insights into the RP model from the perspective of users. The study recruited approximately 40 members of the public, who would be given access to the RP app to use in the planning stage of recreational activities. The participants would then go off and do an activity, and then fill out a post-activity survey. Participants would be provided with GPS-enabled Garmin watches which would give the researchers the means to track participants’ paths during their recreational activities.\n\n\n\nThe requirements of BioDT were quite different than those of SPEAK. The BioDT consortium have collaborated on an R Shiny app which attempts to bring the various models, or ‘prototype Digital Twins’ (pDTs), together through a single user interface.\nThe way this was supposed to end up working is this:\n\nUsers would interact with the main BioDT app, providing the information needed to run one or more of the available models (e.g. the Biodiversity model and the Recreational Potential model, which make up the Cultural Ecosystem Services pDT).\nA request would then be sent to run the model(s), with inputs provided by the user, on the LUMI HPC cluster. Since access to LUMI is restricted, the request is made via an intermediate layer called Lexis.\nThis would trigger a slurm job submission to run a containerised version of the model(s) on LUMI.\nThe results would be transferred back, again via Lexis, for the user to view in the app.\n\nThus, from the BioDT perspective, embedding the RP model within another Shiny app was unhelpful. Instead, the RP model needed to be runnable via a command line script taking (i) a persona and (ii) a target region as command-line arguments. This script would then be containerised to facilitate running on LUMI.\n\n\n\nThe main issues motivating the move to bring in additional software developers were:\n\nAccess to the RP app required an account on DataLabs, which could not be provided to members of the public.\nThe RP app was too slow: very small regions (e.g. Bush estate) took minutes to run, and larger regions (Cairngorms) took hours.\nPotential users were limited to computing RP within the pre-determined regions, which did not cover all of Scotland.\nIn its existing form, i.e. as a Shiny app, the model could not be incorporated in the main BioDT app.\n\nHence, the original development objectives were:\n\nMake the app accessible to participants in the SPEAK study.\nImprove the execution speed and ability to scale to larger areas.\nProvide a means for users to choose the region of interest.\nDisaggregate the RP computation from the Shiny app, and reformulate it so that it could be run on LUMI via the BioDT app.\n\n\n\n\nInitially a few weeks were allocated for this work, and the two of us worked independently on small, self-contained tasks. MT worked on removing dependence on the legacy raster package and replacing it with a dependence on the terra package, which is significantly faster, has better memory management, and supports lazy loading of large rasters. This led to tangible improvements in speed. JMR worked on #1 which turned out to be a red herring.\nAfter gaining familiarity with the codebase and a better understanding of objective 4 it became clear that the most straightforward way to meet objectives 2–4 simultaneously was to fully rewrite the code from scratch. A full rewrite would be the most effective way to improve the speed and scalability (objective 2) and the flexibility to add or modify functionality (including objective 3). Some outstanding issues could also be neatly circumvented."
  },
  {
    "objectID": "dev_report.html#background",
    "href": "dev_report.html#background",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "The Recreational Potential model has had a complicated history of development involving several individuals working independently in different languages (QGIS, Python and R).\nAs of November 2024, the model existed as an interactive Shiny app written in the R language. The actual computation of RP was deeply intertwined with Shiny app code and pre-processing of raster data, although much of it was factored out into functions.\nThe user could load, edit and save personas which were stored in a single .csv file. They could then choose between a selection of geographical areas to run the model, corresponding to a collection of shapefiles stored alongside the code.\nAs well as the persona .csv and shapefiles, the model required input data in the form of raster files (.tif extension) covering Scotland at 20 metre resolution. For the most part (with the exception of the slope layer) these raster were integer-valued, with different integers corresponding to different categories of land cover. For example, each pixel in the Water_Lakes layer could take any of the following values:\n\n\n\nRaster Value\nCorresponding Feature\n\n\n\n\n5\nPond\n\n\n1\nLochan\n\n\n4\nSmall Loch\n\n\n2\nMedium Loch\n\n\n3\nLarge Loch\n\n\n6\nMajor Loch\n\n\n0 or NA\nNo feature present\n\n\n\nBoth code and data were held on NERC DataLabs, a browser-based service for environmental data science resembling JupyterHub and Google Colab in which Jasmin users can run instances of R Studio and publish Shiny apps.\nParts of the code were being tracked using git, with the remote living in a private (but now public) repository within the BioDT GitHub organisation, although the most up-to-date code on DataLabs was several weeks ahead of the most recent commit.\n\n\n\nThe objective of the SPEAK study was to gain insights into the RP model from the perspective of users. The study recruited approximately 40 members of the public, who would be given access to the RP app to use in the planning stage of recreational activities. The participants would then go off and do an activity, and then fill out a post-activity survey. Participants would be provided with GPS-enabled Garmin watches which would give the researchers the means to track participants’ paths during their recreational activities.\n\n\n\nThe requirements of BioDT were quite different than those of SPEAK. The BioDT consortium have collaborated on an R Shiny app which attempts to bring the various models, or ‘prototype Digital Twins’ (pDTs), together through a single user interface.\nThe way this was supposed to end up working is this:\n\nUsers would interact with the main BioDT app, providing the information needed to run one or more of the available models (e.g. the Biodiversity model and the Recreational Potential model, which make up the Cultural Ecosystem Services pDT).\nA request would then be sent to run the model(s), with inputs provided by the user, on the LUMI HPC cluster. Since access to LUMI is restricted, the request is made via an intermediate layer called Lexis.\nThis would trigger a slurm job submission to run a containerised version of the model(s) on LUMI.\nThe results would be transferred back, again via Lexis, for the user to view in the app.\n\nThus, from the BioDT perspective, embedding the RP model within another Shiny app was unhelpful. Instead, the RP model needed to be runnable via a command line script taking (i) a persona and (ii) a target region as command-line arguments. This script would then be containerised to facilitate running on LUMI.\n\n\n\nThe main issues motivating the move to bring in additional software developers were:\n\nAccess to the RP app required an account on DataLabs, which could not be provided to members of the public.\nThe RP app was too slow: very small regions (e.g. Bush estate) took minutes to run, and larger regions (Cairngorms) took hours.\nPotential users were limited to computing RP within the pre-determined regions, which did not cover all of Scotland.\nIn its existing form, i.e. as a Shiny app, the model could not be incorporated in the main BioDT app.\n\nHence, the original development objectives were:\n\nMake the app accessible to participants in the SPEAK study.\nImprove the execution speed and ability to scale to larger areas.\nProvide a means for users to choose the region of interest.\nDisaggregate the RP computation from the Shiny app, and reformulate it so that it could be run on LUMI via the BioDT app.\n\n\n\n\nInitially a few weeks were allocated for this work, and the two of us worked independently on small, self-contained tasks. MT worked on removing dependence on the legacy raster package and replacing it with a dependence on the terra package, which is significantly faster, has better memory management, and supports lazy loading of large rasters. This led to tangible improvements in speed. JMR worked on #1 which turned out to be a red herring.\nAfter gaining familiarity with the codebase and a better understanding of objective 4 it became clear that the most straightforward way to meet objectives 2–4 simultaneously was to fully rewrite the code from scratch. A full rewrite would be the most effective way to improve the speed and scalability (objective 2) and the flexibility to add or modify functionality (including objective 3). Some outstanding issues could also be neatly circumvented."
  },
  {
    "objectID": "dev_report.html#overview-of-work-done",
    "href": "dev_report.html#overview-of-work-done",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "2 Overview of work done",
    "text": "2 Overview of work done\n\n2.1 Reconfiguration of git repository & developer setup\nAlthough it is possible to give multiple users access to a DataLabs notebook, simultaneous access by multiple users is not currently supported. Furthermore, since all users share the same user space, only one user may cache their git configuration and GitHub credentials.\nThe first task was therefore to move development off of DataLabs and use GitHub for version control in a multi-developer setup. The most recent (as of 22/11/2024) version of the code and data was downloaded from DataLabs and added without modification to a new ‘orphan’ git branch — see commit a795456.\nAfter some discussion, the old main branch was moved to old-main to preserve the history, and tagged 2024-model to facilitate rediscovery in future.1 The new branch was renamed main and another branch develop was created by branching from main. develop was assigned as the default branch to align with a workflow where contributions are merged via Pull Requests to develop, which is periodically merged with main after ensuring that everything is functional and self-consistent.\nRun-time calls to install.packages were removed and instead the renv package was used to compile a list of version-pinned dependencies (see comments in #1 for further explanation).\nPull Requests merged:\n\nA working Singularity container with minimal modifications to the existing code #1\nIntroduce formatR #13 (later replaced by StyleR)\n\nIssues closed:\n\nThe containerisation branch needs to be manually merged with main #2\n\n\n\n2.2 Publishing existing app to Posit Connect\nThe SPEAK study was scheduled to launch in early February 2025. Hence, there was a quite urgent need to provide a version of the RP app that could be accessed by study participants through their browser. This led to the decision to prioritise publishing the RP app in its existing form (i.e. objective 1), and postpone development work towards the other objectives (2–4).\nThe initial expectation was that publishing the app through DataLabs would be quick and simple. However, it quickly became clear that this would not be feasible because DataLabs does not give deployed apps write access to the filesystem. This was a problem for us since files were being written to disk during the creation of personas and at various points during the calculation of Recreational Potential. To get around the persona issue we would have needed to very quickly reformulate the app to use remote storage such as Google sheets. However, there other places where data was being written to disk that would have been more complicated to fix.\nFortunately we were able to instead publish the app to UKCEH’s Posit Connect server, which does allow applications to access the filesystem.\n\n\n\n\n\n\nPublishing to UKCEH’s Posit Connect server\n\n\n\nProbably the easiest way to publish to Posit Connect is to install the R package rsconnect and run the following commands from the root of the repository:\nrsconnect::addServer(\"https://connect-apps.ceh.ac.uk\", name=\"connect-apps.ceh.ac.uk\")\nrsconnect::connectApiUser(server=\"connect-apps.ceh.ac.uk\", account=\"&lt;username&gt;\", apiKey=\"&lt;api key&gt;\")\nrsconnect::deployApp(appDir=\".\")\nThis will take a long time if you have a lot of data to upload. For me it took up to an hour to upload ~2GB data.\nYou will want to add the directory rsconnect/ to your .gitignore file.\nSee the UKCEH Posit Connect documentation for further guidance (requires an account with UKCEH Posit Connect).\n\n\nThere were a few minor additions required before we could make the app available to SPEAK study participants. First, the app needed to be accessible to study participants but ideally not anyone else. We agreed that it was sufficient to have a single, global password for the app which would be shared with the participants. For this we used an R package called ShinyManager which checks the username/password combination provided by the user against the correct values set as shell environment variables.\nUKCEH requires that user-facing apps meet a set of criteria before they can be published.\n\nAdhere to UKCEH branding guidelines.\nInclude a link to the UKCEH privacy notice.\nInclude a contact email.\n\nSatisfying these requirements is straightforward with Shiny apps especially, where there is a template theme available at github.com/NERC-CEH/UKCEH_shiny_theming. However, in our case applying this theme caused some buttons to become invisible, which had to be fixed with some custom CSS as detailed in this Issue.\nPull Requests merged:\n\nPublishing the Recreation Potential app to Posit Connect #14\n\nIssues closed:\n\nGlobal password for Shiny app #5 (see commit ab21bd for implementation)\nComply with UKCEH publishing guidelines #15\nApp crashes when loading custom persona #17\n\n\n\n2.3 Full rewrite of the RP model\nThe original aim of #18 was to refactor the existing code to make it possible to run the RP model via a script, independently of the Shiny app. As explained earlier, however, the decision was taken to rewrite the code from scratch. A number of subtle bugs in the original code that led to incorrect outputs (#22, #23) were also fixed during the rewrite.\nIn the process of arriving at a mathematical definition of the RP model (Section 1, Technical Supplement), it became transparent that the ‘dynamic’ part — i.e. the calculations involving user-provided inputs — could be separated from the ‘non-dynamical’ part, which dealt with quantities that only needed to be computed once, ahead of time, and stored for later use.\nHence, the revised design split the code into three independent parts:\n\n‘Non-dynamic’ raster pre-processing, i.e. production of input data (independent of user).\n‘Dynamic’ calculation of Recreational Potential (based on user-provided persona and region of interest).\nImplementation of the Shiny app.\n\nThe dynamic part was recast as a sum of pre-computed raster layers weighted by the persona scores. Concretely, this consisted of reading the rasters from the disk, and then performing the following steps:\n\nFor each of the four components:\n\nMultiply each layer by a scalar.\nSum the layers.\nRescale the result to the unit interval.\n\nSum the components.\nRescale the result to the unit interval.\n\nSteps 1.1 and 1.2 are better treated as a single step; an independent multiply-and-sum at each spatial location. This is close to the simplest mathematical operation one can do on a computer, and is both extremely quick and highly parallelisable.\n\n\n\n\n\n\nOne-hot encoding\n\n\n\nIn the 2024 model, the raster layers took integer values, so a layer might look something like this:\n\\[\nC_i = \\begin{bmatrix}\n\\ddots \\\\\n& 1 & 0 & 0 \\\\\n& 2 & 1 & 0 \\\\\n& 2 & 1 & 3 & \\\\\n& & & & \\ddots\n\\end{bmatrix}\n\\]\nThese integers were really labels for different categories corresponding to the features present in the layer.\nThese values were then remapped to user scores, which involves an indexing operation for each layer, effectively values(layer) &lt;- mapping[values(layer)]. This isn’t particularly inefficient or problematic in and of itself, but it requires some due diligence, such as ensuring that the data is genuinely integer-typed (i.e. not float) and avoiding operations that assume continuous data, such as interpolation (e.g. as part of a reprojection).\nIn order to pre-compute the proximity layers (#21 ) we needed to switch to a one-hot representation, where each feature type gets its own layer that is binary-valued — the feature is either present or not.\n\\[\nC_i \\overset{\\text{one hot}}{\\longrightarrow} ( I_{i0}, I_{i1}, I_{i2}, I_{i3}, \\ldots)\n\\]\n\\[\n\\begin{aligned}\nI_{i0} &= \\begin{bmatrix}\n\\ddots \\\\\n& 0 & 1 & 1 \\\\\n& 0 & 0 & 1 \\\\\n& 0 & 0 & 0 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, , \\quad\nI_{i1} = \\begin{bmatrix}\n\\ddots \\\\\n& 1 & 0 & 0 \\\\\n& 0 & 1 & 0 \\\\\n& 0 & 1 & 0 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, , \\\\\nI_{i2} &= \\begin{bmatrix}\n\\ddots \\\\\n& 0 & 0 & 0 \\\\\n& 1 & 0 & 0 \\\\\n& 1 & 0 & 0 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, , \\quad\nI_{i3} = \\begin{bmatrix}\n\\ddots \\\\\n& 0 & 0 & 0 \\\\\n& 0 & 0 & 0 \\\\\n& 0 & 0 & 1 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, .\n\\end{aligned}\n\\]\nIf we run with this and give all 87 feature types their own layer, the recreational potential can be computed in a single vectorised step as a weighted sum of layers.\n\n\nThe splitting of the original model into a one-time pre-processing stage and a dynamical stage is the essential reason for the multiple orders of magnitude improvement in speed and memory use realised by this code rewrite. All of the slower, more memory-intensive computations could be performed up-front.\nFurther gains resulted from a number of factors made possible through the rewrite:\n\nEliminated intermediate raster i/o operations that were previously required to keep the peak memory requirements within the total amount of memory available.\nReplaced indexing operations with multiply operations, made possible by using a one-hot representation for the input rasters, instead of integer-valued categorical rasters.\nReplaced loops with vectorised operations using terra::app and related functions.\n\nAs an example, the main dynamic part of the model — the calculation of a component — is essentially reduced to the following lines of code:\n1raster &lt;- load_raster(\n    file.path(data_dir, paste0(component, \".tif\")),\n    bbox\n)\n\n2scores &lt;- persona[names(raster)]\n\n3result &lt;- terra::app(raster, function(features) {\n    sum(scores * features, na.rm = TRUE)\n})\n\n1\n\nLazily load the raster, cropping to a region given by bbox\n\n2\n\nExtract the scores for this component from the persona dataframe\n\n3\n\nCompute the weighted sum.\n\n\nterra::app automatically parallelises this multiply-and-sum operation across the grid; each ‘pixel’ is computed in a separate thread. Even better, when terra::app is applied to a simple operator such as sum, it actually calls a fast C++ implementation rather than a pure R one (see the terra documentation).\nThis is also a very memory-light operation; terra only has to load one pixel at a time per parallel thread. This means at any given instance only \\(N_\\text{threads} \\times N_\\text{layers}\\) values need to be loaded in memory, irrespective of how many pixels there are in total.\nPull Requests merged:\n\nRewrite and separate model code from shiny app #18\nRework input data production #29\n\nIssues closed:\n\nPeak memory use is too high #4\nRunning the model without the Shiny app #6\nSeparation of input data and configuration, outputs and intermediate artefacts #7\nRemove redundant packages #12\nApp crashes if name of persona .csv does not match variable contained therein #16\nPersona csv need only contain a list of numbers #20\nProximity rasters can be pre-computed #21\nProximity should be computed using unique features instead of non-unique persona scores #22\nMismatch between integer-integer lookup table and double-valued raster data breaks the raster reclassification step #23\nInput rasters should be integer-typed #24\nMissing values in rasters should be consistently NA, not NaN #26\nOne-hot encode the input raster #27\n\n\n\n2.4 Full rewrite of the Shiny app\nAlthough the original plan was to deploy the existing app for the SPEAK study, and only then move on to look at improvements in speed and scale, some factors outside of our immediate control meant that the model rewrite (#18) was essentially complete before the original app was shared with participants.\nThis opened up the tantalising possibility of using the new model back-end, which was significantly faster and able to work with arbitrary regions of interest rather than the fixed set of shapefiles, for the SPEAK study. However, the new back-end required a new front-end Shiny app.\n\n\n\n\n\n\nUse of Generative AI tools\n\n\n\nAt this point I (JMR) wish to be transparent about my use of Generative AI tools for explaining and generating code. For a number of reasons this seemed a ‘good’ time to lean on Generative AI: the tight deadline (a few days), low stakes (the user interface cannot be ‘incorrect’ and need not be well-written), and the fact that I had never written a Shiny app before (or any R at all for that matter), combined to influence my decision. I used the GPT-4 Turbo model through the Edinburgh Language Model (ELM) interface provided by Edina at the University of Edinburgh.\nIn this case I found Generative AI to be very helpful; I was able to learn R Shiny principles and syntax ‘on the fly’ through exposure to lots of generated examples. This stands in contrast to other frustrating and unproductive experiences I have had with Generative AI in domains where I have more existing knowledge.\nPart of the reason that Generative AI works well here is that R Shiny is extremely popular so there is an abundance of existing R Shiny code available on the internet. I wish to acknowledge the countless individuals whose work (or hobby) shared online has contributed to the generated outputs that I used during this work.\n\n\nThe rewritten app was released to SPEAK study participants in the second week of February. Several issues and possible UI improvements were identified by users in the early period (see list of Issues below). These were addressed and the app redeployed.\nIn particular, we draw attention to issue #49, which was a serious issue in which layers in the input rasters were jumbled up, effectively mislabelled. The origins of this issue were multiple and quite subtle, involving undocumented and unexpected behaviour in terra::rast. We discuss this in more detail in Section 3.2.1, as well as recommending some changes to ensure that this cannot happen undetected in future.\n\nTo ensure that the specific version of the app used in this study could be identified in future, the final deployment (February 25th) was tagged SPEAK-prerelease on GitHub.\nPull Requests merged:\n\nRewrite shiny app #28\nApp improvements #30\nPosit Connect #37\nFinal-final app updates before study launch #38\nFix data production #46\nFAQs texts #47\nPost-launch tweaks #54\nFix bug in appending personas to existing file #58\nImprove handling of bbox checks #79\n\nIssues closed:\n\nApp hangs when output or temporary directory doesn’t exist #3\nUser documentation for the Shiny app #8\nApp crashes if name of persona .csv does not match variable contained therein #16\nShould be possible to download + upload persona files from the app #31\nIndicate computations in progress using waiter tool #32\nSlider for lower cutoff value, below which is transparent #33\nToggle greyscale on background map #34\nSubheaders for item groups #36\nUsers should not be able to overwrite existing personas #42\nFail gracefully for cases of zero recreational potential #44\nUse Scotland shapefile instead of bbox for checking if user area selection out of bounds #45\nLocal path network data missing #48\nData production jumbled up layers #49\nMapping of csv rows onto sliders is broken #55\n\n\n\n2.5 Script & container\nAs explained previously, the key requirement for BioDT was to factor out the RP model calculation into a command-line script that takes the two user-provided inputs as arguments:\n\nA full persona, given as a .csv file.\nA region in which to calculate RP, given as a quadruple of ‘bounding box’ coordinates.\n\nThe main substantive task was to configure parsing command line inputs. We decided against using third-party packages (optparse, argparse) and stick with base R functionality to reduce the future maintenance burden. The result is a very simple command-line interface, lacking nice-to-have features such as argument validation, but sufficient for a ‘minimum working example’ to be handed over to the BioDT team.\nWe then produced a Singularity container .def file based on the rocker/r-ver image (preferred over r-base) which is itself based on the Ubuntu image. The build stage involves (i) installing required C and C++ libraries using apt-get, (ii) installing the biodt.recreation package from GitHub, and (iii) downloading the data. Once the container is built, one can run singularity run app.sif ARGS in order to execute Rscript scripts/cli/main.R ARGS inside the container.\nWe also created a container for the input data production script, anticipating that this would need to be run on LUMI or wherever else we could access a high-memory compute node for the calculation of distances (see Section 2.7).\nPull Requests merged:\n\nRun the Recreational Potential model as a script #67\nAdd singularity container for CLI and data production scripts #90\n\nIssues closed:\n\nRun model using Rscript + args #60\nSingularity container for the cli #70\nSingularity container for the data production script #89\n\n\n\n2.6 Packaging and repository management\nWe adopted the increasingly common practice of organising the code into a package. This has a number of advantages compared with a stand-alone script, since the standardised setup allows us to leverage tools for installing, documenting and testing the code, and managing its dependencies on other packages.\nPackaging in R is not as mature as in other languages, and there were some false starts during the process of familiarising ourselves with the setup and development workflow. In particular, we initially intended to create a separate package for the Shiny app, which would depend on the model package, but later returned to a single-package layout for simplicity and maintenance reasons. It was simply too awkward to develop the model code and the Shiny app code simultaneously.\nWe added Roxygen2-style documentation for all the functions, which produces nicely formatted Markdown documentation in RStudio. We utilised the Lintr and Styler packages, which help make the format consistent as well as catching syntax bugs. Maintaining a consistent format is useful for ensuring that meaningful changes in commits are not obscured by formatting changes. We added a couple of simple tests which are run using testthat, but due to the time pressures on developing a working version of the model for the SPEAK study we did not develop any further tests, which is unfortunate. We configured pre-commit hooks which run the linter, styler, tests and documentation generation, but also provided a script that performs the same steps in case the developer does not want to install pre-commit.\nFinally, we added some vignettes that demonstrate basic usage, although this could be expanded.Vignettes are run during the build stage of the package. This meant they could not use the full input data since (i) it is unacceptable to have to download 3GB data just to build the package, and (ii) we did not want the package to contain 3GB data itself. To get around this, we included some small rasters in the package (inst/extdata/rasters/Bush) and wrote some helper functions for accessing it.\n\n\n\n\n\n\nA note on the inst/ directory\n\n\n\nApparently it has become standard practice to use the inst/ directory to distribute additional elements such as scripts and Shiny apps along with the package. This is the practice we have adopted here. There are really just two important things to know about the inst/ directory:\nFirst, that its contents are copied to the top-level of the package when the package is built. Hence, the top level of the built package will contain examples/, extdata/ and scripts/ (the directory containing shell scripts is not included in the package).\nHence, in order for file paths to work when the package is installed, one must omit inst/ from the path. But this means the path will not work during development.\nThe way to regain consistency between the two situations (installed versus not installed) is to usesystem.file. There are several examples of this in the code, including the one below, where paths to files or directories under inst/ needed to be constructed.\nget_preset_persona_file &lt;- function() {\n    system.file(\"extdata\", \"personas\", \"presets.csv\",\n        package = \"biodt.recreation\", mustWork = TRUE\n    )\n}\n\n\nPull Requests merged:\n\nAdd pre-commit hooks #73\nTidy up the main model package #76\nTidy up Shiny App #78\nSingle package layout (take 2) #80 (first attempt in #74)\nImprove examples and vignettes #81\nBring data production into the main package #88\n\nIssues closed:\n\nInstructions and guidelines for contributors #10\nImprove developer workflow #63\nExpand examples in roxygen2 documentation to include vignettes #77\nAPI for data download #83\n\n\n\n2.7 Proximity contributions and pair-wise distances\nThe 2024 version of the Shiny app contained a step, applying to each road/track/path feature (FIPS_I component) and river/lake feature (Water component), which involved a determination of the distance from each pixel to the nearest pixel in which that feature was present.2\nThis step, which after the rewrite became the final stage of the raster pre-processing pipeline, presented challenges when scaling it up from small regions to the whole of Scotland at 20 metre squared resolution.\nAs a result, the version used in the SPEAK study did not include these proximity contributions. Not everyone was displeased by this — there was generally an acknowledgement that the proximity part of the model needed some more thought. Unfortunately, when linear features (width ~1 pixel) were reprojected onto the Leaflet map this led to some quite confusing results (#61).\n\n2.7.1 Why is this any different from the other data production stages?\nBecause every single other processing step is entirely local - all of the information required to generate an output value for a pixel at coordinate \\(x\\) is contained in the input pixels at coordinate \\(x\\). This makes it trivial to process the data in chunks, and memory costs scale linearly with the area of the chunks.\nIn contrast, a pairwise distance calculation is non-local, since the output value at \\(x\\) depends on the entire set of input values, i.e. at all coordinates.\nHence, when one calls terra::distance on a Scotland-wide raster, one immediately encounters segmentation faults indicating that the C++ backend to terra has attempted to write to a location in memory that does not exist (because it could not be allocated).\nOn my (JMR) desktop I have 16GB RAM. With terra::terraOptions(memfrac = 0.5) there is a bit under 8GB to play with. From playing I found I could process Scotland in slices of 1/8 the total size. On DataLabs there is double the RAM, and I could process 1/4-sized slices, which was reassuring. Extrapolating, this gives 64GB as a ballpark figure for the required RAM to process all of Scotland in one go. LUMI (or indeed any other HPC facility) would provide a compute node with the required RAM. Unfortunately, our project’s allocation on LUMI expired before we managed to attempt this.\nCode for some of these attempts can be found in the legacy.R file.\n\n\n2.7.2 Attempt 1: cutoff distance parameter in terra::distance\nAs of version 1.8.21, we can set a cutoff distance maxdist in terra::distance, beyond which distances are assigned NA, which reduces the function from being global to being dependent only on pixels within the cutoff distance. However, based on cursory look at the code for this cutoff (which was introduced into terra just 2 weeks earlier in this commit!) I could not see evidence of sophisticated memory management based on cutoff distances — it appears to just mask the output.\n\n\n2.7.3 Attempt 2: Create a buffer region around features\nSince the model is only sensitive to distances within around 500m, any pixel greater than 500m from the nearest feature may as well not be computed and just be set to NA. This can be achieved be computing a buffer region around each feature and restricting terra::distance to the buffer region only.\nWe made two attempts to compute a buffer using terra::focal and terra::buffer in the notebooks focal.qmd and buffer.qmd here. Unfortunately the use of terra::buffer on a raster runs into the exact same memory issues as the distance calculation; both buffer and distance call GDALComputeProximity under the hood (see this comment).\nThe use of terra::focal, which can be used to apply a function over a moving window (e.g. with radius 500m) over the raster, was successful at reducing memory requirements, but took an extremely long time.\nIn the case of linear features such as roads, paths and rivers, it would have been significantly more efficient to compute a buffer region using the original vector layers (#51). Unfortunately we were not able to obtain access to these layers at the time.\n\n\n2.7.4 Attempt 3: Replace with convolution\nThe outputs of terra::distance (distances in metres) are passed through a logistic function to map them to the unit interval. There is nothing particularly important about computing distances accurately; it just matters that the outputs of the composition of the distance and logistic function fall monotonically from 1 to 0 over the right range. It seemed reasonable, therefore, to swap this pair of functions for a single convolution, e.g. with a Gaussian kernel. This would reduce memory requirements for the same reason as computing the buffer using a sliding window reduces memory requirements; only small chunks of the raster need to be loaded into memory at any given time.\nHowever, the outputs of a convolution were qualitatively different from the distance + logistic. This is most obvious when one considers extended bodies such as lakes; the output of the convolution in the centre of the lake will be different than at the borders, whereas the output of distance + logistic is constant over the lake surface. The result is also different when two features are present in the convolutional window.\n\n\n2.7.5 Attempt 4: Compute distance in overlapping subdomains:\nSince terra::distance is a global function, it cannot be decomposed into independent subdomains to be computed sequentially. However, since we only care about distances under 500m, domain decomposition is possible provided the domains overlap by at least this distance.\nThe original Scotland-wide raster was divided into 20 overlapping spatial windows with 500m overlapping buffers. After the distance step was complete within each window, the windows were stitched together, discarding the overlaps. The distance raster was also truncated at 500m, setting any values above this to NA which simply passes through the logistic function and ensures that we don’t waste disk space storing high-precision floats that are functionally equivalent to zero.\nPull Requests merged:\n\nFix data production #46 (note - this PR tried several approaches to reducing the memory requirements, but did not reach a satisfactory solution.)\nadding tiling example #92\nRunning scotland #95\nUpdated rasters bush #96\n\nIssues closed:\n\nMissing distance calculation in data production #43\nPath to config.csv is not working as intended #64"
  },
  {
    "objectID": "dev_report.html#sec-recommendations",
    "href": "dev_report.html#sec-recommendations",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "3 Discussion and recommendations",
    "text": "3 Discussion and recommendations\n\n3.1 Outstanding issues\nAt the time of writing there are around 20 open issues on the GitHub repository.\n\n\n\nIssue\nTheme\nComments\n\n\n\n\nUse Google Sheets for persona configuration #11\nUser experience\nSee Section 3.4.2\n\n\nExplanation for ‘proximity’ contributions #19\nDocumentation\nResearch required\n\n\nToggle layers more efficiently using showGroup / hideGroup #35\nEfficiency\nProbably inconsequential\n\n\nModify logistic function parameters so that proximity scores fall off over a longer distance #39\nChanges to the model\nResearch required\n\n\nUse descriptive feature/layer names #50\nGood practice\nImportant (see Section 3.2.1)\n\n\nCompute 500m buffer using original vector layers #51\nEfficiency\n\n\n\nReplace HTML with Markdown for extended text sections in Shiny app #52\nDeveloper experience\n\n\n\nRelationship between the Recreational Potential model/app and ‘Digital Twins’ #53\nDocumentation\nDiscussed in Section 3.5\n\n\nConsider non-linear colour mapping for the app #56\nUser experience\nResearch required\n\n\nInclude sufficient information in persona csv files for manual editing #57\nUser experience\n\n\n\nDownload map from shiny app #59\nUser experience\n\n\n\nProject rasters onto ESPG:3857 ahead of time #61\nEfficiency\nImportant\n\n\nRemove requirement for filesystem write access #71\nApp deployment\nRequired for deployment on DataLabs (see Section 3.4.2)\n\n\nExpand suite of tests #82\nGood practice\n\n\n\nInstalled package fails to read tiff files when initial download times out #86\nUser experience\n\n\n\nTiff error on Windows #87\nBug (live)\nImportant\n\n\nterra::distance throwing error for large, sparse raster during write to disk #91\nBug (circumvented by #92)\nPossible upstream (terra) bug, worth reporting\n\n\nReduce size of input rasters #93\nUser experience\n\n\n\n\n\n\n3.2 Re-engineering the data production process\nThe data production process has significant room for improvement in terms of robustness and reproducibility. Some suggested changes are:\n\nAs far as is feasible, the manual manipulations in QGIS should be substituted for deterministic scripts written in (for example) R.\nData should be reprojected onto a consistent grid at the earliest possible opportunity.\nThe projection CRS should be the same as for Leaflet maps, since that is where all raster data is eventually destined. This would avoid additional coordinate transformations during rendering and prevent the smearing of linear features and edges as described in #61.\nLayers containing linear features such as roads and rivers should not be rasterised until the last step, if at all. If nothing else, the proximity step would benefit from these layers remaining as vectors (#51).\nLayers should be constructed as binary presence/absence rasters from the beginning; one can skip the creation of categorical rasters altogether.\nThe size of rasters should be reducible using the approaches described in #93.\nLayer names should be changed to be more descriptive (see below).\n\n\n3.2.1 Use descriptive names for the features / layers\nThe final recommendation is something we feel duty bound to elaborate on, since it relates to a very subtle and serious issue that affected earlier iterations of the code, and ultimately meant we had to re-deploy the app two weeks into the SPEAK study. This discussion closely follows that in #49 and #50.\nCurrently the feature/layer names are in the format {Component}_{Dataset}_{i}.\nThese names appear in the Name column of config.csv. Through the mapping Name &lt;-&gt; Raster_Val, these names are assigned to the layers of the one-hot-encoded rasters in the one_hot_layer function. After this point, the layer names are propagated through each operation. In app.R they are essentially used to index rows of config.csv, e.g. to get the Description out to put next to the sliders.\nThe main problem which gave rise to #49 is that this naming convention mirrors the default names assigned by terra at various points in the data production, except we have no guarantee on what the trailing index {i} will be. Essentially, the fallback behaviour of terra is to assign layers the correct names, but not necessarily in the correct order.\nThis means that if, for whatever reason, layer names are not being preserved by terra operations, or the assignment of names to a raster is not working as expected, we will not see any error raised. Rather, we will see (if we are looking closely) that the layer names have been scrambled once we go to run the model.\nTo give a concrete example that caused a headache, terra::rast(list_of_rasters) appears to silently drop the layer names of the list_of_rasters, and instead generate default layer names that, in our case, were the same as the names we expected to see, but in a different order.\nIn another example, we failed to notice that layer names were not being set correctly in the one-hot encoding step. Later on, the same layer names were reassigned during this stacking step, based on the order in which those layers appear in the raster, which implied a different order from the one we expected. This meant that FIPS_I_RoadsTracks features were reassigned the names FIPS_I_RoadsTracks_1, FIPS_I_RoadsTracks_2, and so on.\nTo be clear, this is (mostly) our fault, not the fault of terra — we could and should use different layer names! However, the fact that layer names sometimes do and sometimes don’t propagate, and names are silently dropped and regenerated with no warning message, seems like asking for trouble.\nChanging the naming convention would not require much effort. Indeed, if we just edited config.csv before running the data production script everything should sort itself out, with the exception of some particular logic in app.R that assumes the layer name starts with {Component}_{Dataset}.\nA simple fix would be to do nothing more than replace the integers {i} with a descriptor. For example, FIPS_I_RoadsTracks_1 could become FIPS_I_RoadsTracks_Motorway, and Water_Lakes_1 could become Water_Lakes_Pond.\nIf nothing else, this would cause an error if ever these names were not propagated and instead replaced by default names, which is extremely important.\n\n\n\n3.3 Make the model more interpretable\nIt is important to appreciate that, although the RP model produces numerical outputs,3 the purpose of the model is not to quantify, predict or even understand an objective physical world, but to serve as a qualitative input in an individual’s assessment about where to recreate.\nThe design objectives of the model should therefore include the maximisation of a user’s ability to discern suitable locations to recreate. Thus, the mathematical construction of the model, like the user interface, is just another design choice to be iteratively refined based on user feedback from stakeholder engagement studies such as SPEAK.\nWith this point in mind, I recommend changes to the RP model that would take it in the direction of greater simplicity, transparency and interpretability to both users and researchers.\n\nDo not rescale the four components to \\([0, 1]\\); instead, let RP be a simple weighted sum of all 87 items.\nDo not rescale the final result either, or at least make it a global rescaling by dividing by the maximum value of RP possible, not just the maximum value in the chosen region. Note that the colour mapping can still be adjusted to make sure different values are clearly differentiable.\nReplace the logistic function in the proximity part with a simple linear decrease over a fixed length scale. That is, a straight line from \\((0, 1)\\) to \\((d_{\\text{max}}, 0)\\) where \\(d_{\\text{max}}\\) is a distance explicitly chosen, perhaps even by the user as a ‘hyper-parameter’ of the model. It would be a simple extension to make \\(d_\\text{max}\\) specific to individual items, e.g. larger for major lochs than for cycle paths.\n\n\n3.3.1 Why not rescale the components?\nRegarding point 1, the idea behind rescaling the four components before summing them was so that they “contribute equally” to the RP value, despite containing different numbers of items — the Landscape (SLSRA) component contains 39 items whilst the Infrastructure component (FIPS_I) only contains 10.\nThe problem with this is not that the argument is wrong per se, but that the outcome is undesirable. It means that, regardless of how the user configures their persona, these four components will always contribute equally to the RP value.\nTo illustrate the problem we can take an extreme example. Let’s say the user really loves water and scores all lakes and rivers with 10s and 9s, but they have little interest in paths and actively dislike roads, so score them 1s and 0s, respectively. They would reasonably expect rivers and lakes to appear with the highest RP values on the map, and paths and roads to be lowest. However, the paths (scored with 1s) will actually contribute more to the RP value than the rivers (scored with 9s) and therefore show up as having a higher RP value. Why is this? Ignoring the possibility that different features overlap, after rescaling paths will still be effectively scored 1, whereas rivers will be effectively scored 0.9.\nPut differently, this rescaling of the components means that only within-component differences in the scores are translated into differences in RP value. The fact that 9 (rivers) is much larger than 1 (paths) in absolute terms is irrelevant, due to the rescaling.\nWhen the RP value is just a simple weighted sum, these confusing outcomes are avoided and the relationship between the scores and the RP values becomes much more transparent.\nThis is reason enough to remove the rescaling step, but there is another angle to this, which is that most pixels only have a handful of features ‘present’ within them. One does not often find roads overlapping lakes overlapping lowlands — they are mutually exclusive. If one wanted to rescale or normalise the RP values, the maximum number of overlapping features is a far more relevant quantity than the number of features within a component.\nFinally, removing the rescaling step takes the possibility of encountering a divide-by-zero off the table. Recall from the Technical Supplement that this occurs when the maximum and minimum values for a component in the region of interest are equal. This is not unlikely to occur if the user selects a small region of interest, or decides to score an entire component with the same values — e.g. zero if the user intends to nullify contributions from a component. Currently the model does not crash in these situations since we defined some safe handling of NA values, but it is not ideal.\n\n\n\n3.4 Changes to the app\n\n3.4.1 UI changes\nAnecdotal evidence suggests that participants in the SPEAK study found the individual components more useful than their aggregate, the RP layer. It would not be difficult to provide them with the option to toggle individual items (e.g. cycle paths) on the map, as well as their persona-weighted sum. Some users may prefer to omit items by deselecting a checkbox rather than navigating to the persona tab and giving them a score of 0.\nAs well as providing control at the item level, the app should also contain information about the origin of the data they are seeing.\nLinear features should be vector layers rather than rasters. This would avoid pixelation of roads, cycle paths etc.\nThe UI may also display the latitude-longitude coordinate or what3words based on the cursor position. This would help users look up the relevant area on another service such as Komoot or Alltrails.\n\n\n3.4.2 Storage of personas\nAs things stand, personas are stored in .csv files on the server side. This means the app requires write access to the server’s filesystem.\nThis is convenient, since users do not have to upload their own persona files. However, it is not a scalable solution.\nFuture work should take a different approach to handling user’s personas, such as providing the option to link the app to Google sheets.\nRemoving the requirement for write access would also allow UKCEH to publish the app on the in-house DataLabs service, which may be preferable to Posit Connect.\n\n\n\n3.5 Towards a Digital Twin\nThe RP model is intended to form half of the Cultural Ecosystem Services ‘Prototype Digital Twin’, but the relationship between the RP model and a vision of a Digital Twin is not always transparent #53.\nThe following is quoted from the BioDT website (accessed 19/02/2025)\n\nThe BioDT consortium adheres to the following definition of a digital twin (DT), released by the Digital Twin Consortium:\nA digital twin is a virtual representation of real-world entities and processes, synchronized at a specified frequency and fidelity.\nHere, fidelity refers to the level of precision captured by the DT in comparison with its physical counterpart.\n\nIt is difficult to make the case that the RP model in its current form fits this definition; one would have to argue that customising a persona amounts to “synchronising at a specified frequency and fidelity” a “virtual representation of real-world entities and processes.”\nFrom the author’s perspective, there are two planned enhancements that will move the RP model in the direction of a Digital Twin:\n\nCombine the RP model with the biodiversity model as described in (Rolph et al., 2024).\nUpdate the raster data at a “specified frequency” to “synchronise” it with the “real-world entities” it is representing.\n\nHowever, meeting this definition of Digital Twin cannot be an objective in and of itself; it must be an outcome that is realised in pursuit of other objectives. The availability of near real-time data does not justify real-time updates to the RP model. Rather, the frequency with which to update these datasets should be determined by balancing the needs of users with the monetary and environmental cost of the data acquisition and processing pipeline.\nIn cases where the utility of real-time data updates is clear, it may be worth considering whether integrating the BioDT app with third party data services may be more efficient. For example, providing users with a link to a local weather forecast is perfectly sufficient; there would be no need to embed real-time weather forecasts in the app itself. Third-party services could provide information as to the availability of parking, toilets, places to eat, and other things that people may need to plan their activity."
  },
  {
    "objectID": "dev_report.html#concluding-remarks",
    "href": "dev_report.html#concluding-remarks",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "4 Concluding remarks",
    "text": "4 Concluding remarks\nIn the author’s opinion, one of the key contributions from this period of development work was to write down a concrete definition of the RP model (Technical Supplement, Section 1). From this flowed the substantial improvements to the design and efficiency of the code, and the ability to verify that it is working as expected.\nThe kernel of the RP model is a sum of 87 items representing presence/absence/proximity to a landscape feature, weighted by the corresponding persona scores. In the author’s opinion, this simplicity is a good thing! Perhaps we do not need to expend vast amounts of energy, water and money to compute complex metrics for Recreational Potential. Considering the objective is for users to be able to easily run the model many, many times, both the business case and the environmental case for a small computational footprint are high. Were I to take this project forward I would lean into the simplicity and aim to provide users with the most relevant information in a transparent manner.\nIf the intention is to scale up the BioDT app, or the CES component, to make it widely available to members of the public, it may be wise to clearly demarcate the role of researchers — i.e. the science content, stakeholder engagement — and to then outsource development work to professional app developers (i.e. not the author!). It may be fruitful to look for possible integrations with popular apps used by recreationalists, and perhaps consider presenting the CES app as an ‘add-on’ to existing apps rather than a competitor."
  },
  {
    "objectID": "dev_report.html#access-to-code-data",
    "href": "dev_report.html#access-to-code-data",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Access to code & data",
    "text": "Access to code & data\n\nCode for the Recreational Potential model is available as an R Package hosted on GitHub at https://github.com/BioDT/uc-ces-recreation. These reports relate specifically to the version 1.0 release, which is also available on Zenodo at https://doi.org/10.5281/zenodo.15705544.\nThe model requires some input data that is too large to be bundled in with the package, but which can be downloaded from Dropbox after package installation using biodt.recreation::download_data(). This data is also included in the Zenodo listing.\nThe source for these documents and this website can be found at https://github.com/BioDT/ces-recreation-reports."
  },
  {
    "objectID": "dev_report.html#funding",
    "href": "dev_report.html#funding",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Funding",
    "text": "Funding\n\nFunding for OpenNESS came from the European Community’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no 308428, OpenNESS Project (Operationalisation of Natural Capital and Ecosystem Services: From Concepts to Real-world Applications.)\nFunding for BioDT came from the European Union’s Horizon Europe Research and Innovation Programme under grant agreement No 101057437 (BioDT project, https://doi.org/10.3030/101057437). Views and opinions expressed are those of the author(s) only and do not necessarily reflect those of the European Union or the European Commission. Neither the European Union nor the European Commission can be held responsible for them.\nFunding for SPEAK came from the Natural Environment Research Council – Growing Shoots Partnership and application co-creation bursary. NE/Y005805/1 _Growing Shoots."
  },
  {
    "objectID": "dev_report.html#credit-statement",
    "href": "dev_report.html#credit-statement",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "CRediT statement",
    "text": "CRediT statement\n\nJMR: software; visualisation; writing. MT: software; visualisation; writing. CA: conceptualisation; data curation; funding acquisition; software. JD: conceptualisation; funding acquisition; project administration. SR: funding acquisition; software."
  },
  {
    "objectID": "dev_report.html#acknowledgements",
    "href": "dev_report.html#acknowledgements",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nWe wish to acknowledge significant contributions to a previous version of the Recreational Potential model by Will Bolton. JMR would also like to thank Tomáš Martinovič for assisting with understanding the requirements of BioDT.\nWe are very grateful to all the participants of the SPEAK project which this output is based on including: Alastair Leaver, Alice MacSporran, Brian Cassidy, Chris Pollock, David Giles, Jean Cowie, Joanna Gilliatt, Justyna Olszewska, Laura Taylor, Maddi Bunker, Rebecca MacLennan, S Mayes, Shaila Rao, Steve MacKinnon and Tom Gebbie, Active Stirling. We are equally grateful to an additional 18 participants who preferred to remain anonymous."
  },
  {
    "objectID": "dev_report.html#correspondence",
    "href": "dev_report.html#correspondence",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Correspondence",
    "text": "Correspondence\n\n\n{jand,chan}@ceh.ac.uk for enquiries relating to the BioDT or SPEAK projects, or ongoing and future work.\nchan@ceh.ac.uk for enquiries relating to the data sources and QGIS processing.\n{joemar,madtig}@ceh.ac.uk for enquiries relating to the code and anything else appearing in the technical supplement and/or developer’s report.\nsimrol@ceh.ac.uk for enquiries relating to the biodiversity component of the BioDT project."
  },
  {
    "objectID": "dev_report.html#footnotes",
    "href": "dev_report.html#footnotes",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe 2024-model tag on GitHub is a snapshot of all of the code that was on DataLabs. This included multiple versions of the RP model. The ‘working version’ at that time was kept under the R_ShinyVersion_ReducedModel/ subdirectory.↩︎\nIn truth, while this was the intention, it was not quite what was being calculated - see #22)↩︎\nThe RP model constructs a continuous scale by applying operations \\((+, \\times)\\) on ordinal (persona scores) and nominal (feature presence/absence) data. In a strict mathematical sense this is not ‘allowed’, although it is common practice in many fields, with an a posteriori justification based on self-consistency or simply alignment with qualitative expectations.↩︎"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "The BioDT project (2022-25) brought together a diverse range of European organisations including universities, non-profit research institutes, research infrastructure providers and commercial partners, with the aim of developing prototype ‘Digital Twins’ (pDTs) to help protect and restore biodiversity. As part of this consortium, the UK Centre for Ecology & Hydrology (UKCEH) led the development of a ‘Cultural Ecosystem Services’ (CES) pDT.\nThe CES pDT was imagined as a platform that brings together near real time data from a wide range of sources in a manner that is somehow tailored to the individual user. The proposed pDT (Rolph et al., 2024) focuses on two components:\n\nThe Recreational Potential (RP) component (Marsh Rossney et al., 2025) aims to estimate the capacity of a given area to sustain the recreational activities valued by an individual user.\nThe Biodiversity component (Rolph, Carbone, Williams, Andrews, & Dick, 2025) aims to predict spatial distributions of mammals, birds, plant and insects.\n\nThe rationale behind bringing these two components together into a unified framework is that encountering interesting flora or fauna can enrich people’s recreational experiences, and help them to discover new ways to value nature-rich landscapes.\nThe driving motivation for this work is to promote good health and connection to nature through physical activity outdoors. However, there is also a possible synergy with conservation science, which is increasingly using data collected by non-scientists through ‘citizen science’ apps such as iNaturalist and iRecord. Potentially, certain users could be encouraged to visit areas where there is a greater need for sampling.1\nThe RP component and the biodiversity component are distinct models that have been developed independently of each other. However, in both cases their outputs can be displayed on an interactive map of Scotland and served to users using an app framework such as R Shiny.\nIn this short report we will describe basic aspects of the Recreational Potential model. For a detailed account of the inner workings of the model the reader is directed to the accompanying technical supplement."
  },
  {
    "objectID": "summary.html#introduction",
    "href": "summary.html#introduction",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "The BioDT project (2022-25) brought together a diverse range of European organisations including universities, non-profit research institutes, research infrastructure providers and commercial partners, with the aim of developing prototype ‘Digital Twins’ (pDTs) to help protect and restore biodiversity. As part of this consortium, the UK Centre for Ecology & Hydrology (UKCEH) led the development of a ‘Cultural Ecosystem Services’ (CES) pDT.\nThe CES pDT was imagined as a platform that brings together near real time data from a wide range of sources in a manner that is somehow tailored to the individual user. The proposed pDT (Rolph et al., 2024) focuses on two components:\n\nThe Recreational Potential (RP) component (Marsh Rossney et al., 2025) aims to estimate the capacity of a given area to sustain the recreational activities valued by an individual user.\nThe Biodiversity component (Rolph, Carbone, Williams, Andrews, & Dick, 2025) aims to predict spatial distributions of mammals, birds, plant and insects.\n\nThe rationale behind bringing these two components together into a unified framework is that encountering interesting flora or fauna can enrich people’s recreational experiences, and help them to discover new ways to value nature-rich landscapes.\nThe driving motivation for this work is to promote good health and connection to nature through physical activity outdoors. However, there is also a possible synergy with conservation science, which is increasingly using data collected by non-scientists through ‘citizen science’ apps such as iNaturalist and iRecord. Potentially, certain users could be encouraged to visit areas where there is a greater need for sampling.1\nThe RP component and the biodiversity component are distinct models that have been developed independently of each other. However, in both cases their outputs can be displayed on an interactive map of Scotland and served to users using an app framework such as R Shiny.\nIn this short report we will describe basic aspects of the Recreational Potential model. For a detailed account of the inner workings of the model the reader is directed to the accompanying technical supplement."
  },
  {
    "objectID": "summary.html#background",
    "href": "summary.html#background",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "2 Background",
    "text": "2 Background\nThe Recreational Potential model described here has a direct ancestor in ESTIMAP (Ecosystem Service Mapping Tool), which was a collection of models used to produce spatially explicit assessments of ecosystem services, including recreation, at a European scale (Paracchini et al., 2014; Zulian et al., 2013).\nSome years later, Zulian et al. (2018) proposed a protocol for adapting ESTIMAP to local conditions, based on an analysis of case studies involving ESTIMAP and incorporating feedback from stakeholders. This work was part of the OpenNESS project (2012-17), focusing on Long Term Socio-Ecological Research Platforms (LTSER) (Dick et al., 2018).\nDick et al. (2022) adapted the ESTIMAP tool to focus specifically on Recreational Potential in the Cairngorms. They adjusted the parameters of the tool to match two archetypes with different preferences for recreational activities (these are the ‘hard’ and ‘soft’ recreationalist personas described later), and conducted interviews with stakeholders to assess how useful the tool was.\nEarlier on in the BioDT project (2022-25), the RP and biodiversity models were combined as part of the ‘beta’ version of the BioDT app.2 However, at that time the models was limited to pre-calculated ‘static’ raster layers covering a small region (the Cairngorms National Park) rather than all of Scotland (Rolph et al., 2024). Dick, Carbone, et al. (2025) gathered feedback on this tool via a survey and interviews at the British Ecological Society annual meeting in December 2024.\nIn the months since, development work has focused on improving the speed and scalability of these components, to enable the interactive and personalisable experience that was envisaged. The model was rewritten from scratch and a new Shiny app developed that was able to leverage these efficiencies. It was released as ‘version 1.0’ upon the close of the BioDT project (Marsh Rossney et al., 2025), and is available on GitHub under an open-source license.\nExamples of Scotland-wide Recreational Potential maps, produced by running the model using two ‘preset’ configurations, were also made available to download from Zenodo (Tigli et al., 2025). These are previewed in Section 6.\nThe SPEAK project followed in the same spirit as (Dick et al., 2022), but using the updated Recreational Potential model, which allows for greater individual customisation by users. Some preliminary findings from this study are available as a conference presentation (Dick, Carbone, et al., 2025) and workshop report (Dick, Andrews, et al., 2025).\nA retrospective look at the CES part of the BioDT project will be published shortly under Rolph, Carbone, Williams, Andrews, Martinovič, et al. (2025)."
  },
  {
    "objectID": "summary.html#model-description",
    "href": "summary.html#model-description",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "3 Model description",
    "text": "3 Model description\n\n3.1 Overview\nTo describe the Recreational Potential model we will start from its outputs and work backwards.\nThe main model output is an two-dimensional array of numbers (a raster) representing an Recreational Potential value (RP value) between \\(0\\) and \\(1\\) for each 20x20 metre square area of land (pixel) within a given area, with higher values indicating greater Recreational Potential for that specific persona. These RP values can then be mapped to colours and displayed as a heat map over a map of Scotland, as illustrated in Figure 1.\n\n\n\n\n\n\nFigure 1: An example of a heat map displaying Recreational Potential.\n\n\n\nAn RP value is constructed from a combination of 87 items representing distinct attributes of the land. The 87 items are grouped into four components, which are outlined in Table 1. RP values are calculated by weighting each item by a score between \\(0\\) and \\(10\\) that reflects the importance of that item to the user. A full set of 87 scores is referred to as a persona.\n\n\n\n\n\n\n\n\n\n\n\nComponent\nShort code\n# items\n\n\n\n\nLandscape - the suitability of land to support recreational activity\nSLSRA\n40\n\n\nNatural Features influencing the potential\nFIPS_N\n24\n\n\nInfrastructure features influencing the potential\nFIPS_I\n10\n\n\nWater - rivers and lakes\nWater\n13\n\n\n\n\n\nTable 1: The four components contributing to Recreational Potential values.\n\n\n\nThe RP model thus requires two inputs from users:\n\nA persona, i.e. the 87 scores for each item/feature, contained in a .csv file.\nA region of interest, i.e. an area within Scotland in which to calculate RP values, given by either a shapefile or the four coordinates of a bounding box.\n\nWe will often refer to the computations that produce an RP raster from the two user inputs as the ‘dynamic’ part of the RP model, since these computations must be performed each time the user makes a change to their persona or region of interest.\n\n\n3.2 Persona\nAs previously stated, a persona is nothing more than a set of 87 numbers between \\(0\\) and \\(10\\) corresponding to each of the 87 items.\nPersonas are stored in .csv files. However, the interactive R Shiny app provided with the model (Section 4.7) contains a convenient interface for loading, saving and editing personas. Figure 2 is a screenshot from this app, showing some example persona scores for the Water component.\n\n\n\n\n\n\nFigure 2: An example set of persona scores for the ‘Water’ component.\n\n\n\n\n\n3.3 Input data\nThere is another essential set of inputs to the model which are not specified by the user. These are a set of 87 feature layers — one for each of the 87 items — covering Scotland at a resolution of 20x20m.\n\n\n\n\n\n\nItems and feature layers\n\n\n\nWe use the term items in the context of a persona (i.e. a single persona score is an item), and feature layers in the context of raster data (a single layer of a raster is a feature).\nThere is a one-to-one relationship between the 87 items and the 87 feature layers.\nThus, they are described by the same set of labels. For example, the user must provide a score for the Water_Lakes_1 (Pond) item, and the input dataset also contains a feature layer called Water_Lakes_1.\n\n\nFor features belonging to the Landscape (SLSRA) component or the Natural Features component (FIPS_N), these rasters contain just ones and zeros, with \\(1\\) indicating presence of the feature in that pixel and \\(0\\) indicating absence.\n\\[\n\\mathrm{SLSRA}_j = \\begin{cases}\n1 & \\text{if feature} \\; j \\; \\text{present in pixel} \\\\\n0 & \\text{if feature} \\; j \\; \\text{absent in pixel}\n\\end{cases}\n\\]\nFor features belonging to the Infrastructure (FIPS_I) component or the Water (Water) component, the input rasters contain values between zero and one.\n\\[\n\\mathrm{Water}_j = \\begin{cases}\n1 & \\text{if feature} \\; j \\; \\text{present in pixel} \\\\\n0 & \\text{if feature} \\; j \\;\\gtrapprox 500\\text{m away} \\\\\nu(\\mathrm{distance}_j) & \\text{otherwise}\n\\end{cases}\n\\]\nwhere \\(\\mathrm{distance}_j\\) is the distance to the nearest pixel in which the feature \\(j\\) is present, and \\(u(\\mathrm{distance})\\) is a function that maps distances to values between \\(0\\) and \\(1\\), decreasing as the distance increases and falling to zero at approximately 500m (see Section 1, Technical Supplement for details).\nThus, \\(1\\) still indicates presence of the feature in that pixel, but \\(0\\) instead indicates that the feature is not only absent in that pixel, but all surrounding pixels within 500m. The range of values between zero and one are used to signify that the feature is nearby (within 500m), but not present in this pixel itself.\nThis continuous scale allows the RP model to incorporate how areas near e.g., a loch, can still contribute to the recreational potential, even if they do not directly contain the feature.\nFigure 3 contrasts a presence/absence raster (lowlands) with a proximity raster (minor rivers).\n\n\n\n\n\n\n\n\nFigure 3: An example of a presence/absence raster (left) and a proximity raster (right) covering the same region just south of Edinburgh.\n\n\n\n\n\n\n\n3.4 Recreational Potential calculation\nEach of the four components is calculated by multiplying the item/features by the corresponding persona score, summing, and normalising the result,\n\\[\n\\mathrm{SLSRA} = \\mathrm{normalise}\\left( \\sum_j \\mathrm{Score}^{(\\text{SLSRA})}_j \\times \\mathrm{SLSRA}_j \\right) \\, .\n\\]\nIn this context, ‘normalisation’ means transforming the values so that they lie between \\(0\\) and \\(1\\), through the following transformation:\n\\[\n\\mathrm{normalise}(x) = \\frac{x - x_\\text{min}}{x_\\text{max} - x_\\text{min}} \\, .\n\\]\nThe final RP value is calculated by summing these four components and normalising once more,\n\\[\n\\mathrm{RP} = \\mathrm{normalise} \\left( \\mathrm{SLSRA} + \\mathrm{FIPS\\_N} + \\mathrm{FIPS\\_I} + \\mathrm{Water} \\right) \\, .\n\\]\n\n\n\n\n\n\nThe effect of changing the region of interest\n\n\n\nAn important detail is that the normalisation step depends on the minimum and maximum values within the chosen region of interest. This means that running the model with a different region of interest (e.g. over a larger area) will generally yield different values for the same locations, even if both the persona and the underlying data are unchanged.\n\n\nThe dynamic part of the model is depicted in Figure 4.\n\n\n\n\n\n\nflowchart LR\n subgraph s1[\"'Dynamic' computation of Recreational Potential\"]\n        D[\"Crop the 4&lt;br&gt;component rasters to the&lt;br&gt;region of interest\"]\n        E[\"Calculate each&lt;br&gt;component\"]\n        F[\"Normalise each&lt;br&gt;component\"]\n        G[\"Sum&lt;br&gt;components\"]\n        H[\"Normalise\"]\n  end\n    A([\"&lt;i&gt;User input:&lt;/i&gt;&lt;br&gt;Persona scores\"]) ---&gt; E\n    B([\"&lt;i&gt;User input:&lt;/i&gt;&lt;br&gt;Region of interest\"]) --&gt; D\n    C[(\"&lt;i&gt;Fixed input:&lt;/i&gt;&lt;br&gt;Raster data\")] --&gt; D\n    D --&gt; E\n    E --&gt; F\n    F --&gt; G\n    G --&gt; H\n    H --&gt; I((\"RP value\"))\n    style s1 fill:#FFF9C4\n    style A color:#000000\n    style B color:#000000\n    style C color:#000000\n    style D color:#000000\n    style E color:#000000\n    style F color:#000000\n    style G color:#000000\n    style H color:#000000\n\n\n\n\nFigure 4: A breakdown of the ‘dynamic’ part of the Recreational Potential model, that responds to changes in user input."
  },
  {
    "objectID": "summary.html#model-code",
    "href": "summary.html#model-code",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "4 Model code",
    "text": "4 Model code\n\n4.1 Brief history of development work\nThe RP model has been gradually developed within UKCEH over a number of years. There have been three (known) major iterations.\nSome effort has been taken to make previous versions findable. All individuals known to have contributed to development are credited in the version 1.0 release (Marsh Rossney et al., 2025).\n\n\n\n\n\n\nIteration\nVersion\nSource\n\n\n\n\n1 (2023)\n-\nhttps://github.com/BioDT/uc-ces/tree/main/recreation_model\n\n\n2 (2024)\n-\nhttps://github.com/BioDT/uc-ces-recreation/tree/2024-model\n\n\n3 (2025)\nSPEAK pre-release\nhttps://github.com/BioDT/uc-ces-recreation/tree/SPEAK-prerelease\n\n\n3 (2025)\n1.0\nhttps://github.com/BioDT/uc-ces-recreation/releases/tag/v1.0\n\n\n\n\n\nTable 2: Versions of the Recreational Potential model.\n\n\n\nSource code for the most recent version of the code can be found on GitHub at https://github.com/BioDT/uc-ces-recreation. This may be more up-to-date than version 1.0 (June 2025), which is the subject of this report.\n\n\n4.2 Overview of the repository\nThe repository is organised in the following way:\n1├── CONTRIBUTING.md\n2├── DESCRIPTION\n├── inst\n│   ├── examples\n3│   │   ├── capture_messages.R\n│   │   ├── compute_component.R\n|   |   ...\n│   │   └── save_persona.R\n│   ├── extdata\n│   │   ├── config\n4│   │   │   └── config.csv\n│   │   ├── personas\n5│   │   │   └── presets.csv\n│   │   ├── rasters\n│   │   │   ├── Bush\n6│   │   │   │   ├── FIPS_I.tif\n│   │   │   │   ├── FIPS_N.tif\n│   │   │   │   ├── SLSRA.tif\n│   │   │   │   └── Water.tif\n│   │   │   └── Scotland\n7│   │   │       ├── FIPS_I.tif\n│   │   │       ├── FIPS_N.tif\n│   │   │       ├── SLSRA.tif\n│   │   │       └── Water.tif\n│   │   └── shapefiles\n│   │       ├── Bush\n8│   │       │   ├── Bush.cpg\n│   │       │   ├── Bush.dbf\n│   │       │   ├── Bush.prj\n│   │       │   ├── Bush.shp\n│   │       │   └── Bush.shx\n│   │       └── Scotland\n9│   │           ├── Scotland.cpg\n│   │           ├── Scotland.dbf\n│   │           ├── Scotland.prj\n│   │           ├── Scotland.shp\n│   │           └── Scotland.shx\n│   └── scripts\n│       ├── cli\n10│       │   ├── app.sif\n11│       │   ├── main.R\n│       │   └── README.md\n│       └── data_production\n12│           ├── app.sif\n13│           ├── main.R\n│           └── README.md\n14├── LICENSE\n├── LICENSE.md\n├── man\n15│   ├── assert_to_bool.Rd\n│   ├── assert_valid_bbox.Rd\n│   ...\n│   └── timed.Rd\n16├── NAMESPACE\n├── R\n17│   ├── app_run.R\n│   ├── app_server.R\n│   ├── app_text.R\n│   ├── app_theme.R\n│   ├── app_ui.R\n│   ├── bbox.R\n│   ├── config.R\n│   ├── data_download.R\n│   ├── data_input.R\n│   ├── data_production.R\n│   ├── example.R\n│   ├── legacy.R\n│   ├── persona.R\n│   ├── recreation.R\n│   └── utils.R\n├── README.md\n18├── renv.lock\n├── dev\n19│   ├── cli_test.sh\n20│   ├── dev.sh\n21│   ├── pre-commit.R\n│   ├── README.md\n22│   └── run_app.sh\n├── tests\n│   └── testthat\n23│       └── test_io.R\n└── vignettes\n24    ├── compute_potential.qmd\n    ├── personas.qmd\n    └── run_app.qmd\n\n1\n\nInstructions for potential contributors.\n\n2\n\nThe standard DESCRIPTION file for R packages, containing metadata about the package.\n\n3\n\nSimple examples using the package functions, which get included in the generated documentation.\n\n4\n\nConfiguration file, mapping layer names to raster values (for the pre-processing step) and descriptions (used in the Shiny app).\n\n5\n\nFile containing two ‘preset’ personas: the ‘hard’ and ‘soft’ recreationalists described in Rolph et al. (2024).\n\n6\n\nDataset covering a small area, for use in examples and vignettes.\n\n7\n\nDataset for all of Scotland. This is not included in the package and is instead downloaded separately.\n\n8\n\nShapefile and auxiliary data for the example dataset.\n\n9\n\nShapefile and auxiliary data for the full Scotland-wide dataset.\n\n10\n\nContainer definition file used to build a Singularity container for cli/main.R.\n\n11\n\nCommand-line script for the model taking a persona and bounding box as input. This is expected to be called from the main BioDT app.\n\n12\n\nContainer definition file used to build a Singularity container for data_production/main.R.\n\n13\n\nScript that executes all steps of the data pre-processing pipeline.\n\n14\n\nMIT licenses (.md for the repository, no extension for the package).\n\n15\n\nCompiled documentation for the package, generated using roxygen2.\n\n16\n\nThe standard NAMESPACE file for R packages, containing a list of functions provided by the package.\n\n17\n\nSource code for the package.\n\n18\n\nrenv lockfile used (in theory) to install packages deterministically. Used when deploying app to Posit Connect.\n\n19\n\nBash script that runs Rscript inst/scripts/cli/main.R with example data.\n\n20\n\nBash script that runs pre-commit if available, or else Rscript scripts/pre-commit.R, as well as the tests.\n\n21\n\nR script that emulates the behaviour of pre-commit when run, in case the latter is not installed.\n\n22\n\nBash script that loads the local version of the package and runs the Shiny app, for convenience during development.\n\n23\n\nA file containing unit tests. Essentially tokenistic, but provides a template for more unit tests to be added in future.\n\n24\n\nSome vignettes demonstrating simple use of the package.\n\n\n\n\n4.3 Package structure\nThe code is bundled as an R package. This has a number of advantages compared with a stand-alone script, since the standardised setup allows us to leverage tools for installing, documenting and testing the code, and managing its dependencies on other packages.\nIn particular, the package may be installed by passing the GitHub repository to remotes::install_github (or the devtools function with the same name).\nremotes::install_github(\"BioDT/uc-ces-recreation\")\nThis will install the package, which is named biodt.recreation. It will also install the packages upon which biodt.recreation depends, which are listed under Imports in the DESCRIPTION file.\nFunctionality is provided through a collection of functions in the R/ directory that, after installing the package, are accessible to the user in the biodt.recreation namespace. That is, functions such as compute_potential are accessed using the syntax biodt.function::compute_potential, or by name alone after exposing the whole namespacing using library(biodt.recreation).\nDocumentation for these functions is contained in the .Rd files within the man/ directory. This documentation can be brought up in RStudio by typing in ? followed by the function name. For example, typing in ?compute_potential opens the page shown in Figure 5.\n\n\n\n\n\n\nFigure 5: An example of rendered documentation in RStudio.\n\n\n\n\n\n4.4 Downloading the input data\nInput data for the RP model is not available in precisely the form required by the model, as described in Section 3.3. Rather, these input rasters are obtained through a series of processing steps which combine and transform ‘raw’ data downloaded from various open-access datasets.\nCurrently, this ‘data production’ process is split into a manual stage and an automated stage. The automated stage is carried out by a script in the inst/scripts/data_production/ directory.\nHowever, users need not run this script; the data which it produces is stored on Dropbox3 and can be downloaded by calling a function provided by the package.\n# Allow 10 minutes for the download before timing out!\noptions(timeout=600)  \n\nbiodt.recreation::download_data()\n\n\n4.5 Calculation of RP values\nAs stated earlier, the RP model requires two user inputs to run: a persona and a region of interest.\nFor this demonstration, we will use one of the ‘preset’ personas, which is loaded using the function get_example_persona(). We will also load an example bounding box which covers an area just south of Edinburgh.\nThe following snippet of code demonstrates how to compute Recreational Potential. The function also returns each component individually.\nlibrary(biodt.recreation)\n\npersona &lt;- get_example_persona()\nbbox &lt;- get_example_bbox()\n\nlayers &lt;- compute_potential(persona, bbox)\nThe output of this function, layers, is a five-layered raster, whose layers are the four component layers plus the RP layer, as described in Section 3.4.\n\n\n4.6 ‘Preset’ personas\nThe code snippet above made use of two convenience functions for constructing a persona and a bounding box.\nA persona is represented by a very specific type of object in R (a named vector with 87 elements and specific names). It is therefore unlikely that users will want to create one from scratch without using the Shiny app interface.\nWe provide two ‘preset’ personas along with the package. These are\n\nHard Recreationalist: this persona values remote, challenging environments and avoids built-up or highly managed areas.\nSoft Recreationalist: this persona values tranquil, accessible landscapes and natural water features, and avoids steep or harsh terrain.\n\n\n\n\n\n\n\nOrigins of the Hard/Soft Recreationalist personas\n\n\n\nThese personas can be traced back to the study by Dick et al. (2022, p. 5), from which we quote:\n\nTwo individuals were selected and invited to parameterise the model because they were both users of the [Cairngorms National Park] for recreation and considered by park officials as typical of the spectrum of recreational users of the area (local and visitors)… The self-reported soft recreationalist was a staff member of CNPA who had never climbed a ‘Munro’ (a hill over 3000 ft – a common measurement of hiking capability and achievement in the area) and the hard recreationalist regularly hill walked and had completed over 200 Munros.\n\n\n\nPreset personas can be loaded into an R session as follows:\n# Get the path to the preset persona file\npersona_file &lt;- get_preset_persona_file()\n\n# Load the Hard Recreationalist persona\nhard_recreationalist &lt;- load_persona(persona_file, \"Hard_Recreationalist\")\n\n# Load the Soft Recreationalist persona\nsoft_recreationalist &lt;- load_persona(persona_file, \"Soft_Recreationalist\")\nIn fact the function get_example_persona() loads the Hard Recreationalist persona.\nThe strongest preferences of the Hard Recreationalist persona are highlighted in Table 3.\n\n\n\n\n\n\n\n\nscore_group\nfeatures\n\n\n\n\nhighest scores (scored 10 or 9)\nRock Walls (FIPS_N), Mountains (FIPS_N), Inland cliffs, rock pavements and outcrops (SLSRA), Rock cliffs, ledges and shores (SLSRA), National Park (SLSRA)\n\n\nlowest scores (scored 0 or 1)\nBuilt-up areas (FIPS_N), Flood plain (FIPS_N), Depressions (FIPS_N), No slope (FIPS_N), Gentle slope (FIPS_N), Country Park (SLSRA), Raised and blanket bog (SLSRA), Valley mires, poor fens and transition mires (SLSRA), Windthrown woodland (SLSRA), Woodland fringes and clearings and tall forb stands (SLSRA), Bare field or exposed soil (SLSRA), Built-up area (SLSRA), Royal Society for the Protection of Birds (RSPB) Reserve (SLSRA), Pond (Water), Motorway (FIPS_I), A Road (FIPS_I), B Road (FIPS_I), Minor or local road (FIPS_I), Access roads or Track (FIPS_I), Saltings (FIPS_N)\n\n\n\n\n\n\n\n\nTable 3: Highest and lowest scores in the Hard Recreationalist persona.\n\n\n\n\nThe strongest preferences of the Soft Recreationalist persona are highlighted in Table 4.\n\n\n\n\n\n\n\n\nscore_group\nfeatures\n\n\n\n\nhighest scores (scored 10 or 9)\nTraffic Free: Paved Surface (FIPS_I), Coastal dunes and sandy shore (SLSRA), National Park (SLSRA), Major Lochs (Water), Beaches or Dunes (FIPS_N), No slope (FIPS_N), Freshwater (SLSRA), Mixed deciduous and coniferous woodland (SLSRA), Scots pine woodland (SLSRA), Broadleaved deciduous woodland (SLSRA)\n\n\nlowest scores (scored 0 or 1)\nRock Walls (FIPS_N), Built-up areas (FIPS_N), Rocks or Scree (FIPS_N), Depressions (FIPS_N), Extremely steep slope (FIPS_N), Screes (SLSRA), Windthrown woodland (SLSRA), Bare field or exposed soil (SLSRA), Unnamed minor stream or tributary (Water), Motorway (FIPS_I), A Road (FIPS_I), Saltings (FIPS_N)\n\n\n\n\n\n\n\n\nTable 4: Highest and lowest scores in the Soft Recreationalist persona.\n\n\n\n\nScotland-wide Recreational Potential maps computed using these two personas are available to download from Zenodo (Tigli et al., 2025).\n\n\n4.7 Shiny app\nAs part of the SPEAK study an R Shiny app was developed that focused exclusively on the Recreational Potential model. This is provided alongside the main package, since it provides a convenient, dynamic interface for testing and visualising outputs.\nThe source code for the app is split across several files, each containing the app_ prefix:\n\napp_ui.R contains a function make_ui that returns the user interface (UI), i.e. the layout of the Shiny app, sliders, map, buttons etc.\napp_server.R contains a function make_server that returns the server function, which defines the dynamic parts of the app, such as loading/saving/editing personas and drawing a rectangle on the map.\napp_theme.R contains some custom UI elements such as the colour scheme and logo.\napp_text.R contains the extended text elements of the app, such as the user guide.\napp_run.R contains a convenience function run_app for running the app.\n\nThe app can be run from an R session by calling the run_app() function:\nbiodt.recreation::run_app()\nThe result should look like Figure 6.\nIf you are in RStudio this should launch the app in a separate pane. To launch the app in your default browser, you can pass the option launch.browser = TRUE to the function.\n\n\n\n\n\n\nFigure 6: A screenshot of the R Shiny App developed specifically for the RP model for use in the SPEAK study.\n\n\n\nDetailed instructions for using the app are contained within the app itself, in the ‘User Guide’ tab. However, the essential steps are:\n\nCreate a persona using the ‘Persona’ tab.\nDraw a box on the map by clicking the square orange button and dragging your mouse over the map.\nClick the ‘Update Map’ button to compute the Recreational Potential value."
  },
  {
    "objectID": "summary.html#interactive-demo",
    "href": "summary.html#interactive-demo",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "5 Interactive demo",
    "text": "5 Interactive demo\n\nThis interactive demo showcases the model running with the Hard Recreationalist persona for the Bush Estate area near Edinburgh.\nThe model outputs for this example case are displayed in the map below. It is possible to explore the contribution of each component using the controls in the top-right corner of the map.\n\n\n\n\n\n\nWe now take a step back, splitting each component into its constituent layers. You can switch between different components by clicking on the tabs, and toggle different feature layers using the layer selector in the top-right corner of the map. Please note that not all layers contain data specific to the Bush Estate area, so some may not be visible.\nThe base map has been rendered in black and white to enhance the visibility of layers with sparse data. As shown, the Landscape (SLSRA) and Natural Features (FIPS_N) components display binary data, indicating either the presence or absence of features; whereas the Infrastructure (FIPS_I) and Water (Water) components present a distance gradient.\n\n\n\n\n\n\nTip\n\n\n\nAs you explore the maps, it is helpful to have the list of features and their descriptions open in another browser window.\n\n\n\nWaterLandscapeNatural FeaturesInfrastructure\n\n\n\n\nDiscarded layers (no valid data):\n[1] \"Water_Lakes_5\"  \"Water_Lakes_6\"  \"Water_Rivers_1\" \"Water_Rivers_6\"\n[5] \"Water_Rivers_7\"\n\n\n\n\n\n\n\n\n\n\nDiscarded layers (no valid data):\n [1] \"SLSRA_LCM_1\"  \"SLSRA_LCM_3\"  \"SLSRA_LCM_5\"  \"SLSRA_LCM_8\"  \"SLSRA_LCM_9\" \n [6] \"SLSRA_LCM_14\" \"SLSRA_LCM_20\" \"SLSRA_LCM_21\" \"SLSRA_NNR_2\"  \"SLSRA_NP_2\"  \n[11] \"SLSRA_NR_2\"   \"SLSRA_RSPB_2\" \"SLSRA_SAC_2\"  \"SLSRA_SPA_2\"  \"SLSRA_WLA_2\" \n\n\n\n\n\n\n\n\n\n\nDiscarded layers (no valid data):\n [1] \"FIPS_N_Landform_1\"  \"FIPS_N_Landform_2\"  \"FIPS_N_Landform_3\" \n [4] \"FIPS_N_Landform_4\"  \"FIPS_N_Landform_5\"  \"FIPS_N_Landform_6\" \n [7] \"FIPS_N_Landform_7\"  \"FIPS_N_Landform_10\" \"FIPS_N_Landform_11\"\n[10] \"FIPS_N_Landform_13\" \"FIPS_N_Landform_15\"\n\n\n\n\n\n\n\n\n\n\nDiscarded layers (no valid data):\n[1] \"FIPS_I_NationalCycleNetwork_1\" \"FIPS_I_NationalCycleNetwork_4\"\n[3] \"FIPS_I_RoadsTracks_1\""
  },
  {
    "objectID": "summary.html#sec-scotlandwide",
    "href": "summary.html#sec-scotlandwide",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "6 Scotland wide datasets",
    "text": "6 Scotland wide datasets\nThe outputs of the RP model for the Hard Recreationalist and Soft Recreationalist personas (Section 4.6) for the whole of Scotland are available to download as a pair of .tif files containing the raster data (Tigli et al., 2025). The results are previewed in Figure 7.\n\n\n\n\n\n\nFigure 7: Recreational Potential values for the whole of Scotland using the two persona presets.\n\n\n\nProducing these large raster datasets is not straightforward unless one has access to high-memory computing facilities. We describe the steps we took to reduce peak memory requirements in the Developers’ Report."
  },
  {
    "objectID": "summary.html#known-limitations",
    "href": "summary.html#known-limitations",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "7 Known limitations",
    "text": "7 Known limitations\nHere we outline some known issues and limitations that a user is likely to encounter when using the model. Issues and suggestions of a more technical nature are discussed in the Developers’ Report.\n\nThe RP maps can be insufficiently detailed and sometimes important features such as footpaths are missing. This is due to the underlying data being either inaccurate, out of date, or of insufficient resolution to resolve these features.\nThe model outputs lack important information relevant to recreational activities, such as information about toilets, parking etc.\nLinear features such as paths and rivers are hard to discern. This is due to the fact that proximity to rather than presence of these features contributes to the RP value, so a road appears on the map as a thick band.\nThe current set of 87 items that users must score includes many feature types that many lay users will not be familiar with — what is a “moraine” anyway?\nThe RP values depend on the region of interest specified. Hence, if the region of interest is changed (e.g. by drawing a smaller box on the map) the RP values will likely change, even if the persona scores are unchanged. This is due to the ‘normalisation’ step.\nThe influence of the persona scores on the output RP values is not transparent and sometimes counter-intuitive. Scoring an entire component with high (low) values does not necessarily mean the component will contribute more (less) to the RP. In fact, only differences in scores within a component translate into differences in RP values. This is again due to the ‘normalisation’ step."
  },
  {
    "objectID": "summary.html#future-directions",
    "href": "summary.html#future-directions",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "8 Future directions",
    "text": "8 Future directions\nWe see several potential avenues for further research and development work. Again, more technical detail on these suggestions is provided in the Developers’ Report.\n\nSimplifying feature scoring:\nWhile the current set of 87 items allows for a detailed definition of a persona, this can be very time-consuming for users, especially if they are unfamiliar with many of the feature types. Further work could look at grouping similar features into broader thematic categories (e.g. ‘mountain terrain’, ‘urban infrastructure’, ‘wetlands’) to make the scoring process more intuitive and efficient. The option of scoring items at a finer level of detail could be retained for the benefit of expert users.\nAn expanded set of ‘preset’ personas could be an additional convenience. These could include personas calibrated for cyclists, families, hikers, birdwatchers etc.\nMake the effect of user inputs on RP values more intuitive:\nAs discussed above, the effect of adjusting personas scores or the region of interest on the RP values is likely to be a source of confusion. Future updates to the model should prioritise intuitive behaviour and transparency. Removing the normalisation of components would go a long way to meet these objectives.\nPeriodically update the underlying datasets:\nSome of the datasets used in the current version of the model will become outdated as landscapes change or improved data becomes available. Periodically updating the datasets is therefore important to maintain relevance of the model. This could be achieved by replacing the manual ‘offline’ data production process with an automated ‘online’ process that is triggered periodically, e.g. when a dataset is updated. Doing this would also allow the model to be updated based on the weather or season, and in doing so account for flood risk, trail closures etc.\nHowever, the frequency with which to update these datasets should be determined by balancing the needs of users with the monetary and environmental cost of the data acquisition and processing pipeline.\nIntegrate with third-party apps or services:\nIt may be worth considering whether integrating the BioDT app with third party data services may be more efficient than regularly re-creating the input data for the RP model. Third-party services could provide information as to the availability of parking, toilets, places to eat, weather forecast, and other things that people may need to plan their activity.\nScenario analysis:\nThe RP model could become a tool for scenario planning, if users were able to add or remove features from the landscape to simulate possible developments (e.g. a new cycle route), land use changes (e.g. a housing development), or land cover changes (e.g. from climate change forecasts)."
  },
  {
    "objectID": "summary.html#access-to-code-data",
    "href": "summary.html#access-to-code-data",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Access to code & data",
    "text": "Access to code & data\n\nCode for the Recreational Potential model is available as an R Package hosted on GitHub at https://github.com/BioDT/uc-ces-recreation. These reports relate specifically to the version 1.0 release, which is also available on Zenodo at https://doi.org/10.5281/zenodo.15705544.\nThe model requires some input data that is too large to be bundled in with the package, but which can be downloaded from Dropbox after package installation using biodt.recreation::download_data(). This data is also included in the Zenodo listing.\nThe source for these documents and this website can be found at https://github.com/BioDT/ces-recreation-reports."
  },
  {
    "objectID": "summary.html#funding",
    "href": "summary.html#funding",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Funding",
    "text": "Funding\n\nFunding for OpenNESS came from the European Community’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no 308428, OpenNESS Project (Operationalisation of Natural Capital and Ecosystem Services: From Concepts to Real-world Applications.)\nFunding for BioDT came from the European Union’s Horizon Europe Research and Innovation Programme under grant agreement No 101057437 (BioDT project, https://doi.org/10.3030/101057437). Views and opinions expressed are those of the author(s) only and do not necessarily reflect those of the European Union or the European Commission. Neither the European Union nor the European Commission can be held responsible for them.\nFunding for SPEAK came from the Natural Environment Research Council – Growing Shoots Partnership and application co-creation bursary. NE/Y005805/1 _Growing Shoots."
  },
  {
    "objectID": "summary.html#credit-statement",
    "href": "summary.html#credit-statement",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "CRediT statement",
    "text": "CRediT statement\n\nJMR: software; visualisation; writing. MT: software; visualisation; writing. CA: conceptualisation; data curation; funding acquisition; software. JD: conceptualisation; funding acquisition; project administration. SR: funding acquisition; software."
  },
  {
    "objectID": "summary.html#acknowledgements",
    "href": "summary.html#acknowledgements",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nWe wish to acknowledge significant contributions to a previous version of the Recreational Potential model by Will Bolton. JMR would also like to thank Tomáš Martinovič for assisting with understanding the requirements of BioDT.\nWe are very grateful to all the participants of the SPEAK project which this output is based on including: Alastair Leaver, Alice MacSporran, Brian Cassidy, Chris Pollock, David Giles, Jean Cowie, Joanna Gilliatt, Justyna Olszewska, Laura Taylor, Maddi Bunker, Rebecca MacLennan, S Mayes, Shaila Rao, Steve MacKinnon and Tom Gebbie, Active Stirling. We are equally grateful to an additional 18 participants who preferred to remain anonymous."
  },
  {
    "objectID": "summary.html#correspondence",
    "href": "summary.html#correspondence",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Correspondence",
    "text": "Correspondence\n\n\n{jand,chan}@ceh.ac.uk for enquiries relating to the BioDT or SPEAK projects, or ongoing and future work.\nchan@ceh.ac.uk for enquiries relating to the data sources and QGIS processing.\n{joemar,madtig}@ceh.ac.uk for enquiries relating to the code and anything else appearing in the technical supplement and/or developer’s report.\nsimrol@ceh.ac.uk for enquiries relating to the biodiversity component of the BioDT project."
  },
  {
    "objectID": "summary.html#footnotes",
    "href": "summary.html#footnotes",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis was the objective of the DECIDE project.↩︎\nThe beta version of the BioDT app is no longer available online.↩︎\nIn case the Dropbox data becomes unavailable, the data is also bundled with the version 1.0 release on Zenodo.↩︎"
  },
  {
    "objectID": "tech_supp.html",
    "href": "tech_supp.html",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "While there have been several publications citing the RP model, so far none have included a detailed technical description of the model itself.\n\n\nWe begin by defining some notation.\nLet \\(I : \\mathbb{R}^2 \\to \\{0, 1\\}\\) be a binary-valued function that maps pairs of coordinates \\(x \\equiv (x_1, x_2) \\in \\mathbb{R}^2\\) to either \\(0\\) or \\(1\\). This is a mathematical representation of a single raster layer in a ‘one-hot’ representation, where a value of \\(I(x) = 1\\) indicates presence of a feature at the coordinate \\(x\\), and \\(I(x) = 0\\) indicates absence.\nThe RP model currently includes 87 features/items grouped into four components (see Section 3). Each of these has its own presence/absence raster. We will therefore introduce two subscript indices and write each layer as \\(I_{ij}(x)\\), where\n\n\\(i \\in \\{1, 2, 3, 4\\}\\) labels the component to which \\(I_{ij}\\) belongs, as specified in Table 1, and\n\\(j \\in \\{1, 2, \\ldots, n_i\\}\\) labels the item/feature within that component, of which there are \\(n_i\\).\n\nAs a concrete example, if \\(j=1\\) labels the ‘pond’ item, then \\(I_{41}(x)\\) takes a value of \\(1\\) whenever there is a pond at \\(x\\), and a value of \\(0\\) elsewhere.\n\n\n\n\n\n\n\\(i\\)\nComponent\nShort code\n\n\n\n\n1\nLandscape\nSLSRA\n\n\n2\nNatural Features\nFIPS_N\n\n\n3\nInfrastructure\nFIPS_I\n\n\n4\nWater\nWater\n\n\n\n\n\nTable 1: Integer label and short-code for the four components of the RP model.\n\n\n\n\n\n\nFor certain features like rivers and lakes it does not make sense to restrict their contributions to the Recreational Potential to the pixels in which they are present. One does not need to be standing in a lake to appreciate it!1\nIt makes sense to attempt to account for the presence of these features nearby.\nLet \\(\\mathcal{P}_{ij} \\subset \\mathbb{R}^2\\) denote the set of coordinates in which the feature \\((ij)\\) is present, i.e.2\n\\[\n\\mathcal{P}_{ij} := \\left\\{ x' \\in \\mathbb{R}^2 \\mid I_{ij}(x') = 1 \\right\\} \\, .\n\\tag{1}\\]\nWe first compute a ‘distance raster’ in which each pixel is assigned a value that is the (Euclidean) distance to the nearest pixel in which the feature \\((ij)\\) is present,\n\\[\nd_{ij}(x) = \\min_{x'\\in \\mathcal{P}_{ij}} \\lVert x - x' \\rVert_2 \\, ,\n\\tag{2}\\]\nwhere \\(\\lVert x - x' \\rVert_2 = \\sqrt{(x_1 - x'_1)^2 + (x_2 - x'_2)^2}\\).\nThese distances must be mapped to the unit interval \\([0, 1]\\) such that \\(0 \\mapsto 1\\) and \\(\\infty \\mapsto 0\\), i.e. so that presence of the feature in this pixel results in the highest value of \\(1\\), tailing off to \\(0\\) when the feature is very far away.\nThere are many different ways to achieve this. Following Paracchini et al. (2014, p. 374 – Eq. 1), the function chosen is a smooth, monotonically decreasing function in the logistic family,\n\\[\nu(d_{ij}(x) \\,; \\alpha, \\kappa) = \\frac{\\kappa + 1}{\\kappa + \\exp(\\alpha \\, d_{ij}(x))} \\, .\n\\tag{3}\\]\nIt remains to specify values for the parameters \\(\\kappa\\) and \\(\\alpha\\), the latter of which is most important since it determines the rate at which the value of \\(u\\) declines as the distance to the nearest feature increases.\nThe parameters chosen in the original version of this code were3\n\\[\n\\kappa = 6 \\, , \\qquad \\alpha = 0.01011 \\, ,\n\\tag{4}\\]\nresulting in a function, Figure 1, that halves at \\(d\\approx200\\) (metres) and drops to \\(0.1\\) at \\(d\\approx400\\).4 At this distance, features with a user-provided score of \\(10\\) (i.e. the highest) would be equivalent to a local feature given a score of \\(1\\) (the lowest). It is safe to assume that at distances greater than this the contribution from the feature would be indiscernible to the user.\n\n\nCode\nalpha &lt;- 0.01011\nkappa &lt;- 6\nlogistic_func &lt;- function(d) {\n    (kappa + 1) / (kappa + exp(alpha * d))\n}\n\nd &lt;- seq(0, 500, by = 1)\nu &lt;- logistic_func(d)\n\nplot(d, logistic_func(d), ylim=c(0, 1), type=\"l\", lwd=2,\n    xlab=expression(\"d\"), ylab=expression(\"u(d, alpha, kappa)\"))\n\n\n\n\n\n\n\n\nFigure 1: A plot of the function which maps positive distances to the unit interval.\n\n\n\n\n\n\n\n\nAs mentioned previously, there are 87 features in total, each of which corresponds to (a) persona score between \\(0\\) and \\(10\\),\n\\[\n\\rho_{ij} \\in \\{0, 1, \\ldots, 10\\} \\, ,\n\\tag{5}\\]\nand (b) a raster layer \\(f_{ij}(x)\\). For the landscape and natural features components (i.e. \\(i = 1,2\\)) the feature rasters are precisely the binary presence/absence rasters discussed previously,\n\\[\nf_{ij}(x) = I_{ij}(x) \\, , \\qquad i = 1, 2 \\, .\n\\tag{6}\\]\nFor the infrastructure and water components (\\(i=3, 4\\)) the features rasters contain the proximity contributions described above,\n\\[\nf_{ij}(x) = u(d_{ij}(x) \\,; \\alpha, \\kappa) \\, , \\qquad i = 3, 4 \\, .\n\\tag{7}\\]\nEach component is calculated as a simple weighted sum of the features contained within it,\n\\[\nF_i(x \\,; \\rho_i) = \\sum_{j=1}^{n_i} \\rho_{ij} f_{ij}(x) \\, ,\n\\tag{8}\\]\nwhere we have permitted \\(\\rho_i\\) to denote the set of persona scores \\(\\{\\rho_{i1}, \\rho_{i2}, \\ldots, \\rho_{i n_i} \\}\\) for the \\(i\\)-th component.\n\n\n\nLet \\(F \\vert_{\\mathcal{R}}\\) denote the restriction of a function \\(F\\) to a subdomain \\(\\mathcal{R} \\subset \\mathbb{R}^2\\) which defines the ‘region of interest’ in which we wish to compute Recreational Potential. We now define a family of rescaled functions,\n\\[\n\\hat{F}(x \\,; \\mathcal{R}) := \\frac{F(x) - \\min F \\big\\vert_{\\mathcal{R}}}{\\max F \\big\\vert_{\\mathcal{R}} - \\min F \\big\\vert_{\\mathcal{R}}} \\, ,\n\\tag{9}\\]\neach of which corresponds to a particular choice of restriction, i.e. a particular region of interest.\nAssuming that \\(F(x)\\) is not a constant function on \\(\\mathcal{R}\\),5 these rescaled functions are ‘normalised’ to the unit interval within the region of interest, i.e.\n\\[\n\\min_{x\\in\\mathcal{R}} \\hat{F}(x \\,; \\mathcal{R}) = 0 \\, , \\qquad\n\\max_{x\\in\\mathcal{R}} \\hat{F}(x \\,; \\mathcal{R}) = 1 \\, .\n\\tag{10}\\]\nIt is important to be aware that with this approach to rescaling introduces a dependence on the region of interest. That is,\n\\[\n\\hat{F}(x \\,; \\mathcal{R}_1) \\neq \\hat{F}(x \\,; \\mathcal{R}_2) \\, .\n\\tag{11}\\]\nThus, the RP value at any given pixel should be expected to change when a different area is selected, even if the persona and the input data stays the same.\n\n\n\nTo compute the Recreational Potential value, the four rescaled components are summed,\n\\[\nF_{\\mathrm{RP}}(x \\,; \\rho, \\mathcal{R}) = \\sum_{i=1}^4 \\hat{F}_i(x \\,; \\rho_i , \\mathcal{R}) \\, ,\n\\tag{12}\\]\nand rescaled \\(F_{\\text{RP}} \\longrightarrow \\hat{F}_\\text{RP}\\) using Equation 9 once more (with the same \\(\\mathcal{R}\\)) so that the result falls in the interval \\([0, 1]\\)."
  },
  {
    "objectID": "tech_supp.html#sec-techdesc",
    "href": "tech_supp.html#sec-techdesc",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "While there have been several publications citing the RP model, so far none have included a detailed technical description of the model itself.\n\n\nWe begin by defining some notation.\nLet \\(I : \\mathbb{R}^2 \\to \\{0, 1\\}\\) be a binary-valued function that maps pairs of coordinates \\(x \\equiv (x_1, x_2) \\in \\mathbb{R}^2\\) to either \\(0\\) or \\(1\\). This is a mathematical representation of a single raster layer in a ‘one-hot’ representation, where a value of \\(I(x) = 1\\) indicates presence of a feature at the coordinate \\(x\\), and \\(I(x) = 0\\) indicates absence.\nThe RP model currently includes 87 features/items grouped into four components (see Section 3). Each of these has its own presence/absence raster. We will therefore introduce two subscript indices and write each layer as \\(I_{ij}(x)\\), where\n\n\\(i \\in \\{1, 2, 3, 4\\}\\) labels the component to which \\(I_{ij}\\) belongs, as specified in Table 1, and\n\\(j \\in \\{1, 2, \\ldots, n_i\\}\\) labels the item/feature within that component, of which there are \\(n_i\\).\n\nAs a concrete example, if \\(j=1\\) labels the ‘pond’ item, then \\(I_{41}(x)\\) takes a value of \\(1\\) whenever there is a pond at \\(x\\), and a value of \\(0\\) elsewhere.\n\n\n\n\n\n\n\\(i\\)\nComponent\nShort code\n\n\n\n\n1\nLandscape\nSLSRA\n\n\n2\nNatural Features\nFIPS_N\n\n\n3\nInfrastructure\nFIPS_I\n\n\n4\nWater\nWater\n\n\n\n\n\nTable 1: Integer label and short-code for the four components of the RP model.\n\n\n\n\n\n\nFor certain features like rivers and lakes it does not make sense to restrict their contributions to the Recreational Potential to the pixels in which they are present. One does not need to be standing in a lake to appreciate it!1\nIt makes sense to attempt to account for the presence of these features nearby.\nLet \\(\\mathcal{P}_{ij} \\subset \\mathbb{R}^2\\) denote the set of coordinates in which the feature \\((ij)\\) is present, i.e.2\n\\[\n\\mathcal{P}_{ij} := \\left\\{ x' \\in \\mathbb{R}^2 \\mid I_{ij}(x') = 1 \\right\\} \\, .\n\\tag{1}\\]\nWe first compute a ‘distance raster’ in which each pixel is assigned a value that is the (Euclidean) distance to the nearest pixel in which the feature \\((ij)\\) is present,\n\\[\nd_{ij}(x) = \\min_{x'\\in \\mathcal{P}_{ij}} \\lVert x - x' \\rVert_2 \\, ,\n\\tag{2}\\]\nwhere \\(\\lVert x - x' \\rVert_2 = \\sqrt{(x_1 - x'_1)^2 + (x_2 - x'_2)^2}\\).\nThese distances must be mapped to the unit interval \\([0, 1]\\) such that \\(0 \\mapsto 1\\) and \\(\\infty \\mapsto 0\\), i.e. so that presence of the feature in this pixel results in the highest value of \\(1\\), tailing off to \\(0\\) when the feature is very far away.\nThere are many different ways to achieve this. Following Paracchini et al. (2014, p. 374 – Eq. 1), the function chosen is a smooth, monotonically decreasing function in the logistic family,\n\\[\nu(d_{ij}(x) \\,; \\alpha, \\kappa) = \\frac{\\kappa + 1}{\\kappa + \\exp(\\alpha \\, d_{ij}(x))} \\, .\n\\tag{3}\\]\nIt remains to specify values for the parameters \\(\\kappa\\) and \\(\\alpha\\), the latter of which is most important since it determines the rate at which the value of \\(u\\) declines as the distance to the nearest feature increases.\nThe parameters chosen in the original version of this code were3\n\\[\n\\kappa = 6 \\, , \\qquad \\alpha = 0.01011 \\, ,\n\\tag{4}\\]\nresulting in a function, Figure 1, that halves at \\(d\\approx200\\) (metres) and drops to \\(0.1\\) at \\(d\\approx400\\).4 At this distance, features with a user-provided score of \\(10\\) (i.e. the highest) would be equivalent to a local feature given a score of \\(1\\) (the lowest). It is safe to assume that at distances greater than this the contribution from the feature would be indiscernible to the user.\n\n\nCode\nalpha &lt;- 0.01011\nkappa &lt;- 6\nlogistic_func &lt;- function(d) {\n    (kappa + 1) / (kappa + exp(alpha * d))\n}\n\nd &lt;- seq(0, 500, by = 1)\nu &lt;- logistic_func(d)\n\nplot(d, logistic_func(d), ylim=c(0, 1), type=\"l\", lwd=2,\n    xlab=expression(\"d\"), ylab=expression(\"u(d, alpha, kappa)\"))\n\n\n\n\n\n\n\n\nFigure 1: A plot of the function which maps positive distances to the unit interval.\n\n\n\n\n\n\n\n\nAs mentioned previously, there are 87 features in total, each of which corresponds to (a) persona score between \\(0\\) and \\(10\\),\n\\[\n\\rho_{ij} \\in \\{0, 1, \\ldots, 10\\} \\, ,\n\\tag{5}\\]\nand (b) a raster layer \\(f_{ij}(x)\\). For the landscape and natural features components (i.e. \\(i = 1,2\\)) the feature rasters are precisely the binary presence/absence rasters discussed previously,\n\\[\nf_{ij}(x) = I_{ij}(x) \\, , \\qquad i = 1, 2 \\, .\n\\tag{6}\\]\nFor the infrastructure and water components (\\(i=3, 4\\)) the features rasters contain the proximity contributions described above,\n\\[\nf_{ij}(x) = u(d_{ij}(x) \\,; \\alpha, \\kappa) \\, , \\qquad i = 3, 4 \\, .\n\\tag{7}\\]\nEach component is calculated as a simple weighted sum of the features contained within it,\n\\[\nF_i(x \\,; \\rho_i) = \\sum_{j=1}^{n_i} \\rho_{ij} f_{ij}(x) \\, ,\n\\tag{8}\\]\nwhere we have permitted \\(\\rho_i\\) to denote the set of persona scores \\(\\{\\rho_{i1}, \\rho_{i2}, \\ldots, \\rho_{i n_i} \\}\\) for the \\(i\\)-th component.\n\n\n\nLet \\(F \\vert_{\\mathcal{R}}\\) denote the restriction of a function \\(F\\) to a subdomain \\(\\mathcal{R} \\subset \\mathbb{R}^2\\) which defines the ‘region of interest’ in which we wish to compute Recreational Potential. We now define a family of rescaled functions,\n\\[\n\\hat{F}(x \\,; \\mathcal{R}) := \\frac{F(x) - \\min F \\big\\vert_{\\mathcal{R}}}{\\max F \\big\\vert_{\\mathcal{R}} - \\min F \\big\\vert_{\\mathcal{R}}} \\, ,\n\\tag{9}\\]\neach of which corresponds to a particular choice of restriction, i.e. a particular region of interest.\nAssuming that \\(F(x)\\) is not a constant function on \\(\\mathcal{R}\\),5 these rescaled functions are ‘normalised’ to the unit interval within the region of interest, i.e.\n\\[\n\\min_{x\\in\\mathcal{R}} \\hat{F}(x \\,; \\mathcal{R}) = 0 \\, , \\qquad\n\\max_{x\\in\\mathcal{R}} \\hat{F}(x \\,; \\mathcal{R}) = 1 \\, .\n\\tag{10}\\]\nIt is important to be aware that with this approach to rescaling introduces a dependence on the region of interest. That is,\n\\[\n\\hat{F}(x \\,; \\mathcal{R}_1) \\neq \\hat{F}(x \\,; \\mathcal{R}_2) \\, .\n\\tag{11}\\]\nThus, the RP value at any given pixel should be expected to change when a different area is selected, even if the persona and the input data stays the same.\n\n\n\nTo compute the Recreational Potential value, the four rescaled components are summed,\n\\[\nF_{\\mathrm{RP}}(x \\,; \\rho, \\mathcal{R}) = \\sum_{i=1}^4 \\hat{F}_i(x \\,; \\rho_i , \\mathcal{R}) \\, ,\n\\tag{12}\\]\nand rescaled \\(F_{\\text{RP}} \\longrightarrow \\hat{F}_\\text{RP}\\) using Equation 9 once more (with the same \\(\\mathcal{R}\\)) so that the result falls in the interval \\([0, 1]\\)."
  },
  {
    "objectID": "tech_supp.html#production-of-input-rasters",
    "href": "tech_supp.html#production-of-input-rasters",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "2 Production of input rasters",
    "text": "2 Production of input rasters\nThe data production, or raster pre-processing stage refers to the production of the rasters that are directly multiplied by the persona scores in the dynamic part of the model. That is, the output of this stage is four multi-layered rasters \\((f_1, f_2, f_3, f_4)\\) corresponding to the four components, where \\(f_i := (f_{i1}, f_{i2}, \\ldots, f_{i n_i})\\), whose individual layers \\(f_{ij}\\) are defined by Equation 6 (for \\(i = 1, 2\\)) and Equation 7 (for \\(i=2,3\\)).\nThe process of producing these rasters is currently split into two distinct parts:\n\nA manual part in which categorical rasters are constructed from raw downloaded datasets using QGIS\nA scripted part in which these categorical rasters are converted into the form required by the model, using R.\n\nThe scripted part is executed by running inst/scripts/data_production/main.R (or the containerised version) with the manually-produced categorical rasters already present. This script mostly just calls functions defined in R/data_production.R.\n\n2.1 Manipulation in QGIS\n\n2.1.1 Landscape component\nThe Landscape component raster consists of 40 layers, each representing one of its features (see Section 3 for full list). These features can be grouped into different sub-categories:\n\nCP (1 feature) : The Country Parks (CP) feature was sourced from NatureScot (2020).\nHNV (1 feature): The High Nature Value farming feature was sourced from European Environment Agency (2023).\nLCM (28 features): The Land Cover Map (LCM) featured were sourced from NatureScot and Space Intelligence (2023).\nNNR (1 feature): The Natural Nature Reserves (NNR) feature was sourced from NatureScot (2022a).\nNP (1 feature): The National Parks (NP) feature was sourced from Stirling Council (2024)\nNR (1 feature): The Nature Reserves (NR) feature was sourced from NatureScot (2021).\nRP (1 feature): The Regional Parks (RP) feature was sourced from NatureScot (2022b).\nRSPB (1 feature): The Protected sites for birds feature was sourced from Royal Society for the Protection of Birds (2024).\nSAC (1 feature): The Special Area for Conservation (SAC) feature was sourced from NatureScot (2023a).\nSPA (1 feature): The Special Protection Areas (SPA) feature was sourced form NatureScot (2023b).\nSSSI (1 feature): The Sites of Specific Scientific Interest (SSSI) feature was sourced from NatureScot (2024).\nSWT (1 feature): The Scottish Wildlife Trust (SWT) feature was sourced from Scottish Wildlife Trust (2024).\nWLA (1 feature): The Wild Land Area (WLA) feature was sourced form NatureScot (2014).\n\nThe datasets used for this component were clipped to a Scotland Boundary shapefile (Office for National Statistics, 2018), and they were rasterized to a 20m x 20m resolution.\n\n\n2.1.2 Natural Features component\nThe 24 features in this component are grouped into three main categories:\n\nLandform features (16 features): The landform data was extracted from the Scotland 250K Soils Map. (The James Hutton Institute, 2022). The following methodologies were applied:\n\nDissolve: the dataset was “dissolved” in QGIS using the “Landform“ attribute, reducing it to 334 unique polygon features.\nReclassification: the 334 landform types were manually grouped into 16 broader categories based on descriptive keywords (e.g. “hills”, “foothills” etc…). See Table 7.\nRasterization: the dataset was converted into a raster at a 20 m x 20 m resolution.\n\nSlope features (6 features): Slope data were derived from the Copernicus GLO-30 Digital Elevation Model (DEM), a global 30 m resolution dataset (European Space Agency, 2021). The following methodology was applied:\n\nSlope calculation: the DEM was converted into a matching CRS (EPSG: 27700) using Warp (Reproject) using QGIS, with a slope raster calculated using GDAL Slope with its default settings.\nUp-sampling: the raster was resampled to a 20 m x 20 m resolution.\n\n\n\n\nSoil features (2 features): The landform data was derived from the Scotland 250K Soils Map (The James Hutton Institute, 2022) The following methodology was applied:\n\nInitial dissolve: The dataset was “dissolved” by field “genSoilTyp” in QGIS, reducing it to 12 unique attribute values.\nGrouping: The values were manually aggregated into two soil classes: organic (peat) and mineral based on the original classifications (see Table 8).\nRasterization: the dataset was converted into a raster at a 20 m x 20 m resolution.\n\n\n\n\n2.1.3 Infrastructure Features component\nThe 10 features are grouped into three main categories:\n\nRoads Tracks (5 features): Road Tracks data was sourced from the OS OpenRoads dataset (Ordnance Survey, 2023b). The following methodologies were applied:\n\nDissolve: The OpenRoads dataset (Ordnance Survey, 2023b) was “dissolved” in QGIS by the field “Road type” and “Tracks”.\nAdding access roads: the attribute field “Access roads” from the OSM_Roads dataset (OpenStreetMap, n.d.) was merged into the dissolved dataset.\nRasterization: the combined dataset was rasterized at a 20 m x 20 m resolution.\n\nCycle Network (4 features): The National Cycle Network data was sourced from the Sustrans National Cycle Network dataset (Sustrans GIS, 2024). The following methodology was applied:\n\nDissolve: The dataset was “dissolved” in QGIS using the two attribute fields “Desc_” and “Surface”.\nGrouping: The “Desc_” features were then grouped in (1) on road, and (2) off road; whilst the “Surface” features grouped in (3) paved and (4) unpaved. This produced four distinct feature classes\nRasterization: The dataset was converted into raster format at a 20 m x 20 m resolution.\n\nLocal Path Network (1 feature): The “Local Path Network” data was sourced from the Scotland’s Core Paths dataset provided by the Improvement Service (2024). The dataset was converted into raster format at a 20 m x 20 m resolution.\n\n\n\n2.1.4 Water component\nThe 13 features can be divided into two categories:\n\nRivers (6 features): The river data was sourced from the Os Open Rivers (Ordnance Survey, 2023a) and the OS Boundaries dataset. The following methodology was applied:\n\nmerging: To avoid naming inconsistencies, the “Region” field from the OS Boundaries dataset was joined to the Os Open Rivers dataset (Ordnance Survey, 2023a).\ninitial dissolve: the merged dataset was “dissolved” in QGIS using the “name” and “Region” fields. This combined river segments sharing the same name and region into single features, reducing the dataset into 74 997 features.\nReclassification: To simplify the river data at a national scale, a reclassification was carried out (see Table 9 for examples). This is a subjective and based on:  the “form” attribute (indicating water type), or keywords searches in the “name” field, and researcher knowledge of major rivers of national and regional importance.\nRasterization: the dataset was converted into raster format at a 20 m x 20 m resolution.\n\n\n\n\nLakes (7 features): The lakes data was sourced from the Spatial inventory of UK waterbodies dataset (Taylor, 2021). The following methodology was applied:\n\nReclassification: The dataset contained 25404 features for Scotland. To make it into a relevant and scorable dataset it was reduced to six features based on the given size (in hectares) of a waterbody using the attribute “Poly_Area_Ha” (see Table 10).\nRasterization: the datasets were converted into raster format at a 20 m x 20 m resolution.\n\n\n\n\n\n2.2 Quantising the slope raster\nWith one exception, every raster layer produced by the manual process is an integer-valued categorical raster. The single exception is a ‘slope’ raster containing the average absolute gradient \\(s(x)\\) within each pixel.\nWe use terra::classify to quantise this continuous range into six categories according to their steepness (expressed in degrees). These values are based on the six slope intervals from Dick et al. (2022) (expressed in percentages).\n\\[\nC_{\\text{slope}}(x) = \\begin{cases}\n1 & &0 \\leq s(x) &lt; 1.72 \\\\\n2 & &1.72 \\leq s(x) &lt; 2.86 \\\\\n3 & &2.86 \\leq s(x) &lt; 5.71 \\\\\n4 & &5.71 \\leq s(x) &lt; 11.31 \\\\\n5 & &11.31 \\leq s(x) &lt; 16.7 \\\\\n6 & &16.7 \\leq s(x) \\, .\n\\end{cases}\n\\tag{13}\\]\n\n\n2.3 Reprojection\nThe categorical rasters produced in the previous stage do not necessarily share the exact same coordinate grid. They can be coerced to share the same grid using terra::project.\nWe projected all rasters onto a reference raster with the following properties:\n\nCoordinate reference system (CRS): EPSG:27700 (British National Grid)\nResolution: 20 metres x 20 metres\nExtent: \\((x_\\text{min}, x_\\text{max}, y_\\text{min}, y_\\text{max}) = (-10000, 660000, 460000, 1220000)\\), which is a rectangular box around Scotland.\n\nWe used the ‘nearest’ interpolation mode (method=\"near\") since the data is categorical. The reprojected rasters therefore contain the same set of integer values as the original rasters.\n\n\n2.4 Conversion to one-hot representation\nThe next stage converts the categorical rasters (\\(C_i(x) \\in \\{0, 1, \\ldots, n_i\\}\\) into a set of presence/absence rasters for each feature. These binary-valued rasters are referred to as the one-hot representation of the data.\nConsider the following categorical raster,\n\\[\nC_i = \\begin{bmatrix}\n\\ddots \\\\\n& 1 & 0 & 0 \\\\\n& 2 & 1 & 0 \\\\\n& 2 & 1 & 3 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, .\n\\tag{14}\\]\nThe one-hot encoding of this raster is written\n\\[\nC_i \\overset{\\text{one hot}}{\\longrightarrow} ( I_{i0}, I_{i1}, I_{i2}, I_{i3}, \\ldots) \\, ,\n\\tag{15}\\]\nwhere the binary-valued presence/absence rasters are, in this case,\n\\[\n\\begin{align}\nI_{i0} &= \\begin{bmatrix}\n\\ddots \\\\\n& 0 & 1 & 1 \\\\\n& 0 & 0 & 1 \\\\\n& 0 & 0 & 0 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, , \\quad\nI_{i1} = \\begin{bmatrix}\n\\ddots \\\\\n& 1 & 0 & 0 \\\\\n& 0 & 1 & 0 \\\\\n& 0 & 1 & 0 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, , \\\\\nI_{i2} &= \\begin{bmatrix}\n\\ddots \\\\\n& 0 & 0 & 0 \\\\\n& 1 & 0 & 0 \\\\\n& 1 & 0 & 0 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, , \\quad\nI_{i3} = \\begin{bmatrix}\n\\ddots \\\\\n& 0 & 0 & 0 \\\\\n& 0 & 0 & 0 \\\\\n& 0 & 0 & 1 & \\\\\n& & & & \\ddots\n\\end{bmatrix} \\, .\n\\end{align}\n\\tag{16}\\]\nThe implementation of this step involves the use of terra::lapp to parallelise the calculation over the spatial domain. In practice we use NA instead of 0 to denote absence.\n1one_hot_pixel &lt;- function(x) {\n    out &lt;- matrix(0, nrow = length(x), ncol = length(feature_mapping))\n    for (i in seq_along(feature_mapping)) {\n        out[, i] &lt;- ifelse(x == as.numeric(feature_mapping[i]), 1, NA)\n    }\n    return(out)\n}\n\n2layer &lt;- terra::lapp(\n    layer,\n    fun = one_hot_pixel,\n3    filename = outfile,\n    overwrite = TRUE,\n    wopt = list(\n        names = names(feature_mapping),\n        datatype = \"INT1U\"\n    )\n)\n\n1\n\nTake a single pixel value (x) of a single-layered raster and return the one-hot representation at that point, i.e. a vector of n_i values of which up to one is 1 (present) and the remainder are NA (absent).\n\n2\n\nApply this function in a vectorised fashion to every pixel of the input faster.\n\n3\n\nWrite the outputs to outfile as they are computed, to reduce memory requirements.\n\n\n\n\n2.5 Stacking into component rasters\nThis stage is nothing more than combining many single-layered rasters files into a single multi-layered raster for each component. Roughly speaking, we do\n# Construct a list of rasters from each .tif file in `infiles`\nrasters &lt;- lapply(infiles, terra::rast)\n\n# Construct a single multi-layered raster from this list\nstacked &lt;- terra::rast(rasters)\n\n# Re-apply layer names\nlayer_names &lt;- unlist(lapply(rasters, names))\nnames(stacked) &lt;- layer_names\n\n# Write the combined raster to disk\nterra::writeRaster(stacked, outfile)\nNote that terra::rast(rasters) does not preserve layer names when rasters is a list of rasters, hence the need for the two lines prior to writeRaster.\n\n\n\n\n\n\nA warning about layer names\n\n\n\nIt is very unfortunate that the names we have used for the layers follow the same format (filename_i for integers i) as the names that are automatically generated by terra::rast. Because of this, if these two lines that re-apply layer names are omitted, it is not obvious that anything is wrong; no error will be thrown and one can go onto compute RP values, since the names are as expected.\nHowever, the results will be wrong, since terra::rast will apply the right names in the wrong order.\nFuture developers are strongly recommended to fix this problem by using different layer names. This issue and suggested solutions are discussed in depth in the Developers’ Report.\n\n\n\n\n2.6 Proximity contributions\nThis stage applies Equation 2 and Equation 3 to each layer of the Infrastructure and Water components.\nIn fact Equation 2 is the most challenging computation in the whole processing pipeline, due to the fact that its memory requirements scale poorly with the size of the input raster.\nEvery single other processing step is entirely local; all of the information required to generate an output value for a pixel at coordinate \\(x\\) is contained in the input pixels at coordinate \\(x\\). This makes it trivial to process the data in chunks, and memory costs scale linearly with the area of the chunks.\nIn contrast, calculating distance to the nearest feature is strongly non-local; the output value at \\(x\\) is a function of the full set of input values. Naively, the entire raster must be loaded to compute the output at a single location.\nTo perform this calculation we used terra::distance. It is not necessarily true that the underlying C++ implementation of GDALComputeProximity, which is called by terra::distance, actually loads the entire raster into memory immediately. However, for Scotland at 20 metre resolution, we found that the memory requirements for this distance calculation (several 10s of GB) surpass the typical memory available on a standard personal computer by an order of magnitude.\nTo get around this issue, the original Scotland-wide raster was divided into 20 overlapping spatial ‘windows’. Note that the size of the overlap needed to be at least as large as the effective cutoff distance of 500m. After the distance step was complete within each window, the windows were stitched together, discarding the overlaps.\nThe distance raster was also truncated at 500m, setting any values above this to NA which simply passes through the function applying Equation 3 and ensures that we don’t waste disk space storing high-precision floats that are functionally equivalent to zero.\n\n2.6.1 Visual demonstration\nHere we provide a visual demonstration of how a ‘proximity’ raster is obtained from a raster containing just the presence/absence data. The example provided is for the FIPS_I_RoadsTracks_2 feature layer, which corresponds to ‘A’ roads.\nThe presence/absence raster traces out the path of the road. The distance from each cell to the nearest present cell is then calculated using the terra::distance() function . The resulting raster, labeled distance in the example map, contains the distance in meters from the center of each cell to the nearest feature. Application of Equation 3 results in the ‘proximity’ layer.\nThe three layers can be toggled using the control panel in the top-right corner."
  },
  {
    "objectID": "tech_supp.html#sec-listitems",
    "href": "tech_supp.html#sec-listitems",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "3 List of items/features",
    "text": "3 List of items/features\nHere we list the full set of 87 items/features that make up the layers of the input rasters, and must be scored by the user to construct a persona.\n\n\n\n\n\n\n\n\n\nComponent\nShort code\nNum. layers\nDescription\n\n\n\n\nLandscape\nSLSRA\n40\nLand cover type, landscape designations and conservation, and farmland of high nature value.\n\n\nNatural Features\nFIPS_N\n24\nLandform types, soil types and slope.\n\n\nInfrastructure\nFIPS_I\n10\nRoads, tracks, footpaths and cycle networks.\n\n\nWater\nWater\n13\nLakes and rivers.\n\n\n\n\n3.1 Landscape component\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nSLSRA_CP_2\nCountry Park\n\n\nSLSRA_HNV_2\nDesignated High Nature Value (HNV) farmland\n\n\nSLSRA_LCM_1\nAlpine and subalpine grassland\n\n\nSLSRA_LCM_2\nArable land and market gardens\n\n\nSLSRA_LCM_3\nArctic, alpine and subalpine scrub\n\n\nSLSRA_LCM_4\nBare field or exposed soil\n\n\nSLSRA_LCM_5\nBase-rich fens and calcareous spring mires\n\n\nSLSRA_LCM_6\nBroadleaved deciduous woodland\n\n\nSLSRA_LCM_7\nBuilt-up area\n\n\nSLSRA_LCM_8\nCoastal dunes and sandy shore\n\n\nSLSRA_LCM_9\nCoastal shingle\n\n\nSLSRA_LCM_10\nDry grassland\n\n\nSLSRA_LCM_11\nFreshwater\n\n\nSLSRA_LCM_12\nInland cliffs, rock pavements and outcrops\n\n\nSLSRA_LCM_13\nLines of trees, small planted woodlands, early-stage woodland and coppice\n\n\nSLSRA_LCM_14\nLittoral sediment or saltmarsh\n\n\nSLSRA_LCM_15\nMesic grassland\n\n\nSLSRA_LCM_16\nMixed deciduous and coniferous woodland\n\n\nSLSRA_LCM_17\nNon-native coniferous plantation\n\n\nSLSRA_LCM_18\nRaised and blanket bog\n\n\nSLSRA_LCM_19\nRiverine and fen scrubs\n\n\nSLSRA_LCM_20\nRock cliffs, ledges and shores\n\n\nSLSRA_LCM_21\nScots pine woodland\n\n\nSLSRA_LCM_22\nScrees\n\n\nSLSRA_LCM_23\nSeasonally wet and wet grassland\n\n\nSLSRA_LCM_24\nTemperate montane scrub\n\n\nSLSRA_LCM_25\nTemperate shrub heathland\n\n\nSLSRA_LCM_26\nValley mires, poor fens and transition mires\n\n\nSLSRA_LCM_27\nWindthrown woodland\n\n\nSLSRA_LCM_28\nWoodland fringes and clearings and tall forb stands\n\n\nSLSRA_NNR_2\nNational Nature Reserve (NNR)\n\n\nSLSRA_NP_2\nNational Park\n\n\nSLSRA_NR_2\nNature Reserve\n\n\nSLSRA_RP_2\nRegional Park\n\n\nSLSRA_RSPB_2\nRoyal Society for the Protection of Birds (RSPB) Reserve\n\n\nSLSRA_SAC_2\nSpecial Area of Conservation (SAC)\n\n\nSLSRA_SPA_2\nSpecial Protection Area (SPA)\n\n\nSLSRA_SSSI_2\nSite of Special Scientific Interest (SSSI)\n\n\nSLSRA_SWT_2\nScottish Wildlife Trust Reserve\n\n\nSLSRA_WLA_2\nWild Land Areas\n\n\n\n\n\n\n\n\nTable 2: Description of items/features in the Landscape component.\n\n\n\n\n\n\n3.2 Natural Features component\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nFIPS_N_Landform_1\nFoothills\n\n\nFIPS_N_Landform_2\nMountains\n\n\nFIPS_N_Landform_3\nTerraces\n\n\nFIPS_N_Landform_4\nFlood plain\n\n\nFIPS_N_Landform_5\nBeaches or Dunes\n\n\nFIPS_N_Landform_6\nRocks or Scree\n\n\nFIPS_N_Landform_7\nDepressions\n\n\nFIPS_N_Landform_8\nHills\n\n\nFIPS_N_Landform_9\nLowlands\n\n\nFIPS_N_Landform_10\nRock Walls\n\n\nFIPS_N_Landform_11\nUplands\n\n\nFIPS_N_Landform_12\nValley sides\n\n\nFIPS_N_Landform_13\nValley bottom\n\n\nFIPS_N_Landform_14\nBuilt-up areas\n\n\nFIPS_N_Landform_15\nSaltings\n\n\nFIPS_N_Landform_16\nHummocks, mounds or moraines\n\n\nFIPS_N_Slope_1\nNo slope\n\n\nFIPS_N_Slope_2\nGentle slope\n\n\nFIPS_N_Slope_3\nMedium slope\n\n\nFIPS_N_Slope_4\nSteep slope\n\n\nFIPS_N_Slope_5\nVery steep slope\n\n\nFIPS_N_Slope_6\nExtremely steep slope\n\n\nFIPS_N_Soil_1\nPeat or Organic\n\n\nFIPS_N_Soil_2\nMineral\n\n\n\n\n\n\n\n\nTable 3: Description of items/features in the Natural Features component.\n\n\n\n\n\n\n3.3 Infrastructure Features component\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nFIPS_I_LocalPathNetwork_2\nPath\n\n\nFIPS_I_RoadsTracks_4\nMinor or local road\n\n\nFIPS_I_RoadsTracks_2\nA Road\n\n\nFIPS_I_RoadsTracks_1\nMotorway\n\n\nFIPS_I_RoadsTracks_5\nAccess roads or Track\n\n\nFIPS_I_RoadsTracks_3\nB Road\n\n\nFIPS_I_NationalCycleNetwork_1\nOn Road: Paved Surface\n\n\nFIPS_I_NationalCycleNetwork_2\nTraffic Free: Unpaved Surface\n\n\nFIPS_I_NationalCycleNetwork_3\nTraffic Free: Paved Surface\n\n\nFIPS_I_NationalCycleNetwork_4\nOn Road: Unpaved Surface\n\n\n\n\n\n\n\n\nTable 4: Description of items/features in the Infrastructure Features component.\n\n\n\n\n\n\n3.4 Water component\n\n\n\n\n\n\n\n\nName\nDescription\n\n\n\n\nWater_Lakes_1\nPond\n\n\nWater_Lakes_2\nLochan\n\n\nWater_Lakes_3\nSmall Lochs\n\n\nWater_Lakes_4\nMedium Lochs\n\n\nWater_Lakes_5\nLarge Lochs\n\n\nWater_Lakes_6\nMajor Lochs\n\n\nWater_Rivers_1\nMinor river or tributary\n\n\nWater_Rivers_2\nUnnamed minor stream or tributary\n\n\nWater_Rivers_3\nMajor river or tributary\n\n\nWater_Rivers_4\nNamed minor stream or tributary\n\n\nWater_Rivers_5\nLake\n\n\nWater_Rivers_6\nTidal river or estuary\n\n\nWater_Rivers_7\nCanal\n\n\n\n\n\n\n\n\nTable 5: Description of items/features in the Water component."
  },
  {
    "objectID": "tech_supp.html#list-of-data-sources",
    "href": "tech_supp.html#list-of-data-sources",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "4 List of data sources",
    "text": "4 List of data sources\n\n\n\n\n\n\nData sources used for the creation of the underlaying raster datasets.\n\n\n\n\n\n\n\n\n\n\n\n\nName\nComponent\nDescription\nSource\nAttribute statement\nConditions of use\nData Owner/IPR\nVersion\n\n\n\n\nScotland Boundary\nNA\nShapefile of the Scotland boundary - NUTS level1\nOffice for National Statistics, 2018\nContains public sector information licensed under the Open Government Licence v3.0. Contains OS data © Crown copyright and database right 2024\nFreely available for any use (public domain or CC0)\nUK Govt.\nJan-18\n\n\nCore paths network\nFIPS_I\nshapefile containing the core path network\nImprovement Service, 2024\nContains public sector information licensed under the Open Government Licence v3.0.\nNA\nImprovement Service\n15/02/2024\n\n\nRoads\nFIPS_I\nShapefile contains road types\nOrdnance Survey, 2023b\nContains Ordnance Survey data licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nOrdnance Survey (OS)\nOct-23\n\n\nTracks\nFIPS_I\nShapefile containing road types within OpenStreetMap (OSM) filtered for tracks.\nOpenStreetMap, n.d.\nMap data copyrighted OpenStreetMap contributors and available from https://www.openstreetmap.org\nFreely available for any use (public domain or CC0)\nOrdnance Survey (OS)\nNA\n\n\nNational Cycle Network\nFIPS_I\nshapefile containing the National Cycle Network\nSustrans GIS, 2024\nContains public sector information licensed under the Open Government Licence v3.0.\nNA\nNA\n18-Feb-24\n\n\nLandform classes from Scotland Soil Map\nFIPS_N\nA shapefile containing polygons of the soil types and landorm at a 250k:1 scale\nThe James Hutton Institute, 2022\nNational Soil Map of Scotland v1.4 copyright and database right The James Hutton Institute 2024. Used with the permission of The James Hutton Institute. All rights reserved. Any public sector information contained in these data is licensed under the Open Government Licence v.2.0\nFreely available with obligation to quote the source\nJames Hutton Institute\n1.4\n\n\nSlope\nFIPS_N\nCreated from Copernicus GLO-30 Digital Elevation Model\nEuropean Space Agency, 2021\nEuropean Space Agency, Sinergise (2021). Copernicus Global Digital Elevation Model. Distributed by OpenTopography. https://doi.org/10.5069/G9028PQB. Accessed: 2024-02-15\nFreely available with obligation to quote the source\nESA\n01/01/2011 - 07/01/2015\n\n\nSoilclasses from Scotland Soil Map\nFIPS_N\nA shapefile containing polygons of the soil types and landorm at a 250k:1 scale\nThe James Hutton Institute, 2022\nNational Soil Map of Scotland v1.4 copyright and database right The James Hutton Institute 2024. Used with the permission of The James Hutton Institute. All rights reserved. Any public sector information contained in these data is licensed under the Open Government Licence v.2.0\nFreely available with obligation to quote the source\nJames Hutton Institute\n1.4\n\n\nSpatial inventory of UK waterbodies\nWater\nLakes\nTaylor, 2021\nContains data supplied by UK Centre for Ecology & Hydrology licensed under the Open Government Licence v3.0.\nFreely available with obligation to quote the source\nUKCEH\nv3.6\n\n\nOS Open Rivers\nWater\nRivers\nOrdnance Survey, 2023a\nContains Ordnance Survey data licensed under the Open Government Licence v3.0.\nFreely available with obligation to quote the source\nOrdnance Survey (OS)\n2.3 - (04/2023)\n\n\nLand Cover Map\nSLSRA\nEUNIS L2 Raster containing pixels of land cover habitat type\nNatureScot and Space Intelligence, 2023\nMaps and data created by Space Intelligence with input and support from NatureScot , © SNH\nFreely available with obligation to quote the source\nUKCEH\n2022\n\n\nNNR\nSLSRA\nShapefile containing areas designated as NNR\nNatureScot, 2022a\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n24/07/2023\n\n\nNational Parks\nSLSRA\nShapefile containing Scotlands National Parks\nStirling Council, 2024\n© Scottish Government, contains Ordnance Survey data © Crown copyright and database right 2024.\nFreely available for any use (public domain or CC0)\nScottish Govt.\n20/02/2023\n\n\nNR\nSLSRA\nShapefile containing areas designated as Nature Reserves\nNatureScot, 2021\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n24/07/2023\n\n\nRegional Park\nSLSRA\nShapefile containing areas designated as Regional Park\nNatureScot, 2022b\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n24/07/2023\n\n\nRSPB Reserves\nSLSRA\nShapefile containing RSPB reserves\nRoyal Society for the Protection of Birds, 2024\nData reproduced with the permission of RSPB.   © Crown Copyright. Ordnance Survey licence number 100021787 (2024)\nFreely available with obligation to quote the source\nRSPB\nNA\n\n\nSAC\nSLSRA\nShapefile containing areas designated as Special Areas of Convervation (SAC)\nNatureScot, 2023a\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n29-Aug-23\n\n\nSPA\nSLSRA\nShapefile containing areas designated as SPA\nNatureScot, 2023b\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n24/07/2023\n\n\nSSSI\nSLSRA\nShapefile containing areas designated as SSSI\nNatureScot, 2024\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n15/02/2024\n\n\nSWT Reserves\nSLSRA\nShapefile containing Scottish Wildlife Trust (SWT) reserves\nScottish Wildlife Trust, 2024\nScottish Wildlife Trust\nFreely available with obligation to quote the source\nScottish Wildlife Trusts\nNA\n\n\nWildland\nSLSRA\nShapefile containing areas designated as Wildland\nNatureScot, 2014\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n2014 (24/7/2024)\n\n\nCountryParks\nSLSRA\nShapefile containing areas designated as CountryParks\nNatureScot, 2020\nContains public sector information licensed under the Open Government Licence v3.0.\nFreely available for any use (public domain or CC0)\nNature Scot\n24/07/2023\n\n\nHigh Nature Value (HNV) farmland\nSLSRA\nShapefile containing HNV farmland land parcels\nEuropean Environment Agency, 2023\nN/A available via EEA data portal under open access (ODC-by)\nFreely available for any use (public domain or CC0)\nEEA\nNA\n\n\n\n\n\n\nTable 6: List of data sources."
  },
  {
    "objectID": "tech_supp.html#sec-reclass",
    "href": "tech_supp.html#sec-reclass",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "5 Reclassification tables",
    "text": "5 Reclassification tables\n\n5.1 Landform\n\n\n\n\n\n\n\n\n\n\n\n\nLandform\nReclassification\n\n\n\n\nUndulating foothills and valley sides with gentle and strong slopes: non-rocky\nFoothills\n\n\nValley sides with steep and very steep slopes: non- to moderately rocky\nValley sides\n\n\nLowland with dry ridges and wet hollows with gentle and strong slopes: slightly rocky\nLowlands\n\n\nUndulating lowlands and uplands with gentle and strong slopes: non-rocky\nUndulating ground\n\n\nHills with strong slopes\nHills\n\n\nRidged hills with gentle to strong slopes: very rocky\nHills\n\n\nMountains with gentle and strong slopes: non- to very rocky\nMountains\n\n\nUndulating hills with gentle and strong slopes: moderately rocky\nUndulating ground\n\n\nLowlands with complex gentle and strong slopes: moderately rocky\nLowlands\n\n\nRugged dissected lowlands and hills with gentle and strong slopes: very rocky\nHills\n\n\nHill sides with valley sides and hills with steep and very steep slopes: moderately and very rocky\nHills\n\n\nFoothills with strong and steep slopes\nFoothills\n\n\nHills and valley sides and undulating lowlands with gentle to steep slopes\nHills\n\n\nHill sides with steep and very steep slopes: moderately and very rocky\nHills\n\n\nLowlands with gentle slopes: non-rocky\nLowlands\n\n\nHill and valley sides with gentle and strong slopes\nValley sides\n\n\nHills and valley sides with steep and very steep slopes: non-rocky\nHills\n\n\nUndulating uplands with complex gentle slopes: slightly to moderately rocky\nUplands\n\n\nHills and valley sides with gentle to steep slopes: slightly to moderately rocky\nHills\n\n\nHills and undulating lowlands with gentle and strong slopes: moderately rocky\nHills\n\n\nHills with simple strong and steep slopes\nHills\n\n\nHills and valley sides with gentle and strong slopes: non-rocky\nHills\n\n\nMountains with gentle to very steep slopes: slightly to very rocky\nMountains\n\n\nHills with gentle and strong slopes: slightly rocky\nHills\n\n\nHill sides and undulating lowlands with strong and steep slopes: moderately rocky\nHills\n\n\nHill sides with gentle and strong slopes: slightly and moderately rocky\nHills\n\n\nHills with complex strong slopes: moderately rocky\nHills\n\n\nHills with complex gentle to strong slopes: slightly to moderately rocky\nHills\n\n\nDrumlins and undulating lowlands with gentle and strong slopes\nUndulating ground\n\n\nLowlands with gentle and strong slopes: non- and slightly rocky\nLowlands\n\n\nUnknown\nBuilt-up Areas\n\n\nUndulating lowlands and hills with gentle to steep complex slopes: slightly to moderately rocky\nUndulating ground\n\n\nHills and valley sides with strong slopes: non-rocky\nHills\n\n\nMountains with gentle and strong slopes: slightly and moderately rocky\nMountains\n\n\nHummocky moraines on valley sides\nHummocks / Moraines\n\n\nHill sides with steep and very steep slopes: moderately to very rocky\nHills\n\n\nHummocky moraines: often bouldery\nHummocks / Moraines\n\n\nTerraces with gentle slopes: non-rocky\nRaised beach / Terrace / Coastal flats\n\n\nUndulating lowlands and hills with gentle and steep slopes\nUndulating ground\n\n\nUndulating lowlands and uplands with gentle and strong slopes\nUndulating ground\n\n\nHill sides with steep slopes: non-rocky\nHills\n\n\nBeaches and dune slacks with minor dunes with gentle and strong slopes\nBeaches / Dunes\n\n\nHummocky valley and slope moraines: often bouldery\nHummocks / Moraines\n\n\nHill sides with steep and very steep slopes: slightly to very rocky\nHills\n\n\nUndulating foothills with gentle slopes: slightly rocky\nFoothills\n\n\nPeat\nValley bottom / Peats\n\n\nHill sides with steep and very steep slopes: non-rocky\nHills\n\n\nHummocky valley moraines: non-rocky\nHummocks / Moraines\n\n\nValley and hill sides with gentle and strong slopes\nValley sides\n\n\nValley sides and floors with gentle to steep slopes: often with landslips\nValley sides\n\n\nRidged low hills with gentle to very steep slopes: very rocky\nHills\n\n\nHill and valley sides with simple and complex strong slopes\nValley sides\n\n\nDepressions and foothills with gentle slopes\nDepressions\n\n\nHills and valley sides with generally concave with strong and steep slopes\nHills\n\n\nMounds with terraces and undulating lowlands with gentle to steep slopes\nUndulating ground\n\n\nHill summits with gentle and strong slopes: slightly rocky with bouldery\nHills\n\n\nHill sides with gentle and strong slopes: non-rocky\nHills\n\n\nMountains with gentle and strong slopes: non- to moderately rocky\nMountains\n\n\nHills with strong and steep slopes: moderately rocky with boulders\nHills\n\n\nUndulating lowlands with gentle slopes: slightly rocky\nUndulating ground\n\n\nHummocky valley and slope moraines\nHummocks / Moraines\n\n\nStrongly terraced hills with steep slopes: slightly rocky\nHills\n\n\nHills with steep slopes: slightly to moderately rocky\nHills\n\n\nRaised beach terraces and mounds with minor undulations and very gentle slopes\nRaised beach / Terrace / Coastal flats\n\n\nHills with gentle to steep slopes: slightly rocky\nHills\n\n\nHills with strong and steep slopes: non- and slightly rocky\nHills\n\n\nTerraced hills with gentle and strong slopes: moderately rocky\nHills\n\n\nHills and valley sides with strong to very steep slopes: moderately rocky\nHills\n\n\nHill sides with steep slopes: moderately rocky\nHills\n\n\nHill and valley sides with steep slopes: slightly to moderately rocky\nValley sides\n\n\nUndulating foothills with gentle slopes: non-rocky\nFoothills\n\n\nTerraces of fluvioglacial and riverine origin with gentle slopes\nRaised beach / Terrace / Coastal flats\n\n\nUndulating lowlands with gentle and strong slopes: non-rocky\nUndulating ground\n\n\nHills with strong and steep slopes\nHills\n\n\nValley sides with gentle and strong slopes\nValley sides\n\n\nUplands and northern lowlands with gentle and strong slopes\nUplands\n\n\nWeakly terraced hill sides with steep and very steep slopes: very rocky\nHills\n\n\nValley floors with terraces and mounds with with gentle and strong slopes\nValley bottom / Peats\n\n\nUndulating uplands with strong slopes\nUplands\n\n\nHill sides with gentle to steep slopes: moderately and very rocky\nHills\n\n\nHill sides with gentle to steep slopes: moderately rocky\nHills\n\n\nHummocky valley moraines: often bouldery\nHummocks / Moraines\n\n\nBroad valley bottoms and depressions with rock knolls\nValley bottom / Peats\n\n\nUndulating lowlands and hills with gentle and strong slopes: slightly rocky\nUndulating ground\n\n\nUndulating uplands with strong and gentle slopes\nUplands\n\n\nHills and valley sides with strong and steep slopes: moderately rocky\nHills\n\n\nMounds and ridges with gentle to steep slopes\nUndulating ground\n\n\nHills with complex strong slopes: slightly to moderately rocky\nHills\n\n\nValley sides and undulating lowlands with gentle and strong slopes: slightly rocky\nValley sides\n\n\nUndulating lowlands and foothills with gentle and strong slopes with hummocky moraines: non- and slightly rocky\nFoothills\n\n\nDepressions and foothills with gentle slopes: slightly rocky\nDepressions\n\n\nHills with gentle to steep slopes: very rocky with boulders\nHills\n\n\nHills with gentle to steep slopes: moderately rocky\nHills\n\n\nLower valley sides and floors with gentle to steep slopes: often with landslips\nValley sides\n\n\nHills and valley sides with steep and strong slopes\nHills\n\n\nMountain summits with strong to very steep slopes: moderately to very rocky\nMountains\n\n\nHills with strong to very steep slopes: very rocky\nHills\n\n\nHills and undulating uplands with strong and steep slopes\nHills\n\n\nRock walls and scree: very rocky\nRock Walls\n\n\nLowlands and hillsides with strong and steep slopes: slightly rocky\nLowlands\n\n\nValley floors and lowland with gentle slopes\nValley bottom / Peats\n\n\nDissected lowlands and hills with gentle and strong slopes: moderately rocky\nLowlands\n\n\nMountain summits with gentle to steep slopes: moderately and very rocky with scree\nMountains\n\n\nGentle complex hill slopes and occasional flats: moderately rocky\nHills\n\n\nUndulating lowlands and hills with gentle and strong slopes: non-rocky\nUndulating ground\n\n\nUndulating lowlands with mounds and terraces with gentle slopes\nUndulating ground\n\n\nHills and undulating uplands with gentle and strong slopes\nHills\n\n\nHills and valley sides with gentle to steep slopes\nHills\n\n\nHillocky lowlands with gentle and strong slopes: slightly rocky\nHills\n\n\nHill sides with steep complex slopes: moderately rocky\nHills\n\n\nMounds on valley sides with strong slopes\nUndulating ground\n\n\nRugged hills with gentle to strong slopes: very rocky\nHills\n\n\nUndulating lowlands and hills with gentle and strong slopes: non- and slightly rocky\nUndulating ground\n\n\nGently undulating to hilly with gentle and strong slopes: non-rocky\nUndulating ground\n\n\nFoothills with strong slopes\nFoothills\n\n\nHill sides with very steep slopes: moderately rocky with with cliffs\nHills\n\n\nHill and valley sides with gentle to steep slopes: non-rocky\nValley sides\n\n\nUndulating foothills with gentle slopes\nFoothills\n\n\nFoothill with gentle slopes\nFoothills\n\n\nHills and valley sides with gentle to strong slopes: non-rocky\nHills\n\n\nHummocky valley and slope moraines: slightly rocky with often bouldery\nHummocks / Moraines\n\n\nLowlands with gentle and strong complex slopes: slightly to moderately rocky\nLowlands\n\n\nFoothills with gentle and strong slopes\nFoothills\n\n\nUndulating lowlands with gentle and strong slopes and hummocky moraines: non- to slightly rocky\nUndulating ground\n\n\nBeaches and dunes with gentle and strong slopes\nBeaches / Dunes\n\n\nMountain summits with gentle and strong slopes: non- to slightly rocky\nMountains\n\n\nRugged hills with gentle and strong slopes: very rocky\nHills\n\n\nUndulating lowlands and foothills with strong and gentle slopes\nUndulating ground\n\n\nLochs\nFresh Water\n\n\nUndulating hills with strong slopes: non-rocky\nHills\n\n\nHill and valley sides with steep and very steep slopes: moderately and very rocky\nValley sides\n\n\nHill and valley sides with strong and steep slopes\nValley sides\n\n\nUndulating lowlands and hills with strong and steep slopes: non-rocky\nUndulating ground\n\n\nDepressions and undulating uplands with gentle slopes\nDepressions\n\n\nDepressions and footslopes\nDepressions\n\n\nRugged hill sides with strong and steep slopes: very rocky\nHills\n\n\nMountain or hill summits with gentle and strong slopes: non- to very rocky with bouldery\nMountains\n\n\nRaised beach terraces and undulating dunes (machair) with gentle and steep slopes: non-rocky\nRaised beach / Terrace / Coastal flats\n\n\nMountain summits with gentle to very steep slopes: very rocky with scree\nMountains\n\n\nHills with simple convex strong and steep slopes\nHills\n\n\nUndulating uplands and depressions with gentle and strong slopes\nUplands\n\n\nWeakly terraced hill sides with gentle to steep slopes: moderately rocky\nHills\n\n\nUndulating lowlands and foothills with gentle slopes: non-rocky\nUndulating ground\n\n\nHills and undulating uplands with gentle to steep slopes\nHills\n\n\nDepressions and hill sides with gentle slopes\nHills\n\n\nUndulating lowlands with gentle and strong slopes and stepped hillsides with steep slopes: non- to moderately rocky\nUndulating ground\n\n\nDunes and slacks with wide slope range\nBeaches / Dunes\n\n\nUndulating foothills with gentle and strong slopes\nFoothills\n\n\nUndulating lowlands and hill sides with gentle and strong slopes: non-rocky\nUndulating ground\n\n\nLowland with gently sloping terraces\nLowlands\n\n\nUndulating lowlands with gentle and strong slopes: slightly to moderately rocky\nUndulating ground\n\n\nFoothills and undulating lowlands with gentle and strong slopes\nFoothills\n\n\nHill crests and ridges with gentle slopes\nHills\n\n\nHill sides with gentle and strong slopes: moderately rocky\nHills\n\n\nMountain summits with gentle and strong slopes\nMountains\n\n\nUndulating lowlands and foothills with gentle and strong slopes: non- and slightly rocky\nUndulating ground\n\n\nBasins and valleys\nValley bottom / Peats\n\n\nUndulating lowland and foothills with gentle and strong slopes: non- and slightly rocky\nUndulating ground\n\n\nValley floors with mounds and terraces\nValley bottom / Peats\n\n\nHummocky valley moraines\nHummocks / Moraines\n\n\nMounds and undulating lowlands with gentle slopes\nUndulating ground\n\n\nHills and valley sides with strong and steep slopes: non-rocky\nHills\n\n\nUndulating uplands with complex and short gentle and strong slopes\nUplands\n\n\nValleys and depressions amongst hills and uplands with gentle slopes\nDepressions\n\n\nDepressions and undulating uplands with complex gentle slopes: moderately rocky\nDepressions\n\n\nUndulating uplands with strong simple slopes\nUplands\n\n\nValley sides with concave and regular with gentle and strong slopes: non-rocky\nValley sides\n\n\nUndulating lowlands and foothills with gentle to steep slopes: moderately rocky\nUndulating ground\n\n\nUndulating lowlands and hills with strong slopes\nUndulating ground\n\n\nImmature soils\nRocks / Scree\n\n\nUndulating foothills with gentle and strong slopes: slightly rocky\nFoothills\n\n\nDrumlins and complex gentle slopes: non- and moderately rocky\nHummocks / Moraines\n\n\nMounds and terraces with gentle slopes\nUndulating ground\n\n\nUndulating hill and upland with gentle and strong slopes\nHills\n\n\nHills and lowlands with gentle to steep slopes: slightly and moderately rocky\nHills\n\n\nRugged hills and valley sides with strong and steep slopes: very rocky with scree\nHills\n\n\nRaised beach terraces and mounds with gentle slopes\nRaised beach / Terrace / Coastal flats\n\n\nUndulating lowlands and hills with gentle and strong slopes: slightly rocky to rocky\nUndulating ground\n\n\nUndulating lowlands and foothills with strong slopes\nUndulating ground\n\n\nUndulating uplands and hills with gentle and strong slopes: non- and slightly rocky\nUndulating ground\n\n\nHills with gentle to steep slopes: moderately to very rocky\nHills\n\n\nRidged lowland and hills with gentle and strong slopes: slightly rocky\nHills\n\n\nHills with simple convex strong slopes\nHills\n\n\nValleys and depressions with concave gentle slopes\nValley bottom / Peats\n\n\nHills with steep slopes: moderately and very rocky\nHills\n\n\nValley sides with steep and very steep slopes: moderately and very rocky\nValley sides\n\n\nUndulating lowlands and valley sides with gentle and strong slopes\nUndulating ground\n\n\nHills with complex strong and steep slopes: non-rocky\nHills\n\n\nHills with gentle to steep slopes: non- and slightly rocky\nHills\n\n\nRugged hills and valley sides with steep and very steep slopes: very rocky with scree\nHills\n\n\nMountains with gentle to very steep slopes: non- to very rocky\nMountains\n\n\nUndulating uplands with gentle slopes\nUplands\n\n\nMounds and discontinuous terraces with gentle slopes\nUndulating ground\n\n\nHills with strong and steep slopes: slightly rocky\nHills\n\n\nHills with simple convex steep and strong slopes\nHills\n\n\nUndulating lowlands and foothills with gentle and strong slopes: non-rocky\nUndulating ground\n\n\nUndulating lowlands and hills with gentle to very steep slopes: non-rocky\nUndulating ground\n\n\nHills with complex strong and steep slopes: moderately to very rocky\nHills\n\n\nLowlands with gentle slopes\nLowlands\n\n\nMounds with ridges and terraces with gentle to steep slopes\nUndulating ground\n\n\nUndulating uplands with gentle and strong slopes\nUplands\n\n\nMountains with gentle and strong slopes: non-rocky\nMountains\n\n\nUndulating lowlands and uplands with gentle slopes: non-rocky\nUndulating ground\n\n\nHill and valley sides with gentle and strong slopes: non-rocky\nValley sides\n\n\nMountains with gentle to very steep slopes: moderately rocky\nMountains\n\n\nUndulating lowlands and hills with gentle and strong slopes\nUndulating ground\n\n\nUndulating lowlands and terraces with gentle slopes\nUndulating ground\n\n\nHill sides with steep slopes: slightly rocky\nHills\n\n\nValley sides with gentle and strong slopes: slightly and moderately rocky\nValley sides\n\n\nDepressions and hill sides with gentle and strong slopes\nDepressions\n\n\nRugged hills with strong and steep slopes: very rocky with some scree\nHills\n\n\nTerraces and mounds with gentle slopes\nHummocks / Moraines\n\n\nUndulating foothills and uplands with gentle and strong slopes\nFoothills\n\n\nValley sides with strong to very steep slopes: moderately rocky\nValley sides\n\n\nBroad ridge with gentle and strong slopes\nHills\n\n\nUndulating lowlands with gentle and strong slopes: slightly rocky\nUndulating ground\n\n\nRugged hills with strong and steep slopes: very rocky with scree\nHills\n\n\nUndulating lowlands with gentle and steep slopes\nUndulating ground\n\n\nFoothills and lowlands with gentle and strong slopes\nFoothills\n\n\nFoothills with gentle slopes\nFoothills\n\n\nValley floors and lowlands with rock knolls and moundy moraines: complex gentle slopes\nValley bottom / Peats\n\n\nHillsides with steep and very steep slopes: slightly to very rocky\nHills\n\n\nHills and uplands with gentle slopes\nHills\n\n\nHummocky valley moraines: slightly to very bouldery\nHummocks / Moraines\n\n\nUndulating lowlands and hills with gentle and strong slopes: moderately rocky\nUndulating ground\n\n\nValley sides with gentle and strong slopes: non-rocky\nValley sides\n\n\nHill sides and undulating land with gentle and strong slopes: non-rocky\nHills\n\n\nMountains with gentle to steep slopes: moderately and very rocky\nMountains\n\n\nHillocky and weakly terraced land with gentle to strong slopes: moderately rocky\nHills\n\n\nUplands with gentle slopes\nUplands\n\n\nUndulating lowland and lower hill slopes with gentle to strong slopes: non-rocky\nUndulating ground\n\n\nHills and valley sides with very steep slopes: some crags with scree and boulders: very rocky\nHills\n\n\nHills and valley sides with gentle and strong slopes: non-rocky with some scree\nHills\n\n\nHills with gentle and strong slopes\nHills\n\n\nRidged lowland with gentle to steep slopes: very rocky\nLowlands\n\n\nSaltings\nBeaches / Dunes\n\n\nGently sloping lowlands: slightly and moderately rocky\nLowlands\n\n\nDrumlins and depressions with gentle and strong slopes: slightly rocky\nHummocks / Moraines\n\n\nTerraces with gentle slopes: slightly rocky\nRaised beach / Terrace / Coastal flats\n\n\nMountain summits with gentle to steep slopes: non- to very rocky with scree\nMountains\n\n\nHills and valley sides with gentle to steep slopes: non-rocky\nHills\n\n\nLowlands and hill sides with gentle to very steep slopes: moderately rocky\nLowlands\n\n\nUndulating hill sides with gentle and strong slopes: moderately rocky\nHills\n\n\nRaised beach terraces and undulating dunes (machair) with gentle slopes: moderately rocky\nRaised beach / Terrace / Coastal flats\n\n\nHills and valleys with gentle to steep slopes\nHills\n\n\nHills and valley sides with frequently terraced with with gentle and strong slopes: slightly rocky\nHills\n\n\nUndulating lowlands with gentle slopes\nUndulating ground\n\n\nHills and undulating lowlands with gentle and strong slopes\nHills\n\n\nUndulating lowlands and hills with gentle to steep slopes: slightly rocky\nUndulating ground\n\n\nRidged low hills with strong slopes: moderately rocky\nHills\n\n\nMountain summits with gentle and strong slopes: non- and slightly rocky\nMountains\n\n\nHills and valley sides with steep and very steep slopes: very rocky\nHills\n\n\nGently undulating lowlands: slightly rocky\nLowlands\n\n\nHill and mountain summits with gentle and strong slopes: slightly and moderately rocky\nHills\n\n\nUndulating lowlands and foothills with gentle and strong slopes\nUndulating ground\n\n\nDepressions and gentle slopes\nDepressions\n\n\nHill sides with strong to very steep slopes: moderately to very rocky\nHills\n\n\nValley sides and undulating lowlands with gentle and strong slopes: moderately to very rocky\nValley sides\n\n\nHillocky lowland with gentle and strong slopes: moderately rocky\nHills\n\n\nMountain summits with strong to very steep slopes: very rocky\nMountains\n\n\nUndulating uplands with gentle and strong slopes: non-rocky\nUplands\n\n\nHills and valley sides with very steep slopes\nHills\n\n\nUndulating lowlands and stepped hillsides with strong and very steep slopes: moderately rocky\nUndulating ground\n\n\nMounds and terraces with gentle and strong slopes\nUndulating ground\n\n\nHill and valley sides with strong and steep slopes: moderately rocky\nValley sides\n\n\nHill sides with strong and steep slopes\nHills\n\n\nValley sides with simple and complex gentle and strong slopes\nValley sides\n\n\nUndulating lowlands with gentle slopes: moderately rocky\nUndulating ground\n\n\nHill sides with steep and very steep regular slopes: moderately rocky\nHills\n\n\nFoothills and undulating uplands with gentle slopes\nFoothills\n\n\nRidged hills with gentle to strong slopes: moderately rocky\nHills\n\n\nRaised beach platform: moderately rocky\nRaised beach / Terrace / Coastal flats\n\n\nHill and valley sides with strong to very steep slopes: moderately rocky and bouldery\nValley sides\n\n\nFoothills and depressions with gentle slopes\nFoothills\n\n\nElongated depressions\nDepressions\n\n\nMounds and undulating lowlands with gentle and strong slopes\nUndulating ground\n\n\nHills and valley sides with gentle and strong slopes: slightly rocky\nHills\n\n\nUndulating lowlands and foothills with gentle slopes\nUndulating ground\n\n\nHills with strong and steep complex slopes: moderately to very rocky\nHills\n\n\nRugged hills with strong and steep slopes: very rocky\nHills\n\n\nHill and mountain summits with gentle to steep slopes: slightly rocky\nHills\n\n\nHill sides with often with mounds with terraces and depressions: gentle slopes\nHummocks / Moraines\n\n\nHummocky moraines and depressions\nHummocks / Moraines\n\n\nDrumlins and undulating lowlands with simple and complex gentle and strong slopes: slightly rocky\nUndulating ground\n\n\nUndulating lowlands with gentle and strong slopes\nUndulating ground\n\n\nFoothills and lowlands with simple and complex gentle and strong slopes\nFoothills\n\n\nRugged hills with steep and very steep slopes: very rocky with scree\nHills\n\n\nHill and valley sides with strong to very steep slopes: moderately rocky\nValley sides\n\n\nUndulating lowlands with complex strong slopes: moderately rocky\nUndulating ground\n\n\nUndulating lowlands and stepped hill sides with strong and very steep slopes: moderately rocky\nUndulating ground\n\n\nHills and depressions with gentle and strong slopes\nHills\n\n\nHills with gentle and strong slopes: moderately rocky\nHills\n\n\nStabilized dunes and undulating raised beaches\nBeaches / Dunes\n\n\nFlood plains with river terraces and former lake beds\nFlood plain\n\n\nUndulating foothills with gentle to steep slopes: moderately rocky\nFoothills\n\n\nHill summits with gentle slopes: slightly rocky with stony\nHills\n\n\nMounds and hollows with gentle slopes\nUndulating ground\n\n\nHills and valley sides with strong and steep slopes\nHills\n\n\nMountian summits with gentle and strong slopes: non-rocky\nMountains\n\n\nValley floors with terraces and mounds with gentle and strong slopes\nValley bottom / Peats\n\n\nDrumlins with intervening simple and complex gentle slopes\nHummocks / Moraines\n\n\nFoothills with complex gentle and strong slopes\nFoothills\n\n\nUndulating hills and uplands with gentle and strong slopes\nHills\n\n\nHill sides with strong and very steep slopes: very rocky with bouldery\nHills\n\n\nVery steep rock walls and stabilised scree: very rocky\nRock Walls\n\n\nMountain summits with gentle and strong slopes: non-rocky\nMountains\n\n\nMountains with gentle to very steep slopes: moderately and very rocky: bouldery\nMountains\n\n\nRidged lowland with gentle and strong slopes: moderately rocky\nLowlands\n\n\nHill sides with gentle and strong slopes\nHills\n\n\nHill and valley sides with strong to very steep slopes: slightly and moderately rocky\nValley sides\n\n\nUndulating lowlands with gentle slopes: non-rocky\nUndulating ground\n\n\nHills and lowlands with gentle to steep slopes: non-rocky\nHills\n\n\nHills with gentle to strong slopes\nHills\n\n\nRaised beach terraces with gentle slopes\nRaised beach / Terrace / Coastal flats\n\n\nHummocky valley moraines with often bouldery\nHummocks / Moraines\n\n\nHummocky moraines\nHummocks / Moraines\n\n\nUndulating lowlands and hills with gentle to steep slopes: slightly to very rocky\nUndulating ground\n\n\nDune slacks and undulating raised beaches\nBeaches / Dunes\n\n\nWeakly terraced hill sides with steep and very steep slopes: moderately rocky\nHills\n\n\nValley sides with gentle slopes: non-rocky\nValley sides\n\n\nHills and hill sides with gentle and strong slopes: moderately rocky\nHills\n\n\nHills with gentle to strong slopes: slightly rocky\nHills\n\n\nHills and valley sides with strong to very steep slopes: moderately rocky with scree\nHills\n\n\nMoundy terraces with gentle and strong slopes\nUndulating ground\n\n\nUndulating lowlands with gentle to strong slopes: non-rocky\nUndulating ground\n\n\nHill sides and hills with steep and very steep slopes: moderately and very rocky\nHills\n\n\nHills and undulating lowlands with gentle and strong slopes: non-rocky\nHills\n\n\nHill and valley sides with steep slopes: non-rocky\nValley sides\n\n\nHills and valley sides with strong and steep slopes: slightly and moderately rocky\nHills\n\n\nUndulating lowlands and valley sides with gentle and strong slopes: non-rocky\nUndulating ground\n\n\nTerraced hills with gentle and strong slopes: slightly to moderately rocky\nHills\n\n\nUndulating lowlands with gentle and strong slopes: moderately rocky\nUndulating ground\n\n\nFoothills and depressions with with gentle slopes\nFoothills\n\n\nHills with steep and strong slopes\nHills\n\n\n\n\n\n\nTable 7: Reclassification of the Natural Features component (landform layers) baed on data extracted from The James Hutton Institute (2022).\n\n\n\n\n\n\n5.2 Soil\n\n\n\n\n\n\n\n\n\n\nReclassification\ngenSoilTyp\n\n\n\n\nOrganic\nPeaty podzols, Peaty gleys, Peat,\n\n\nMineral\nMineral podzols, Mineral gleys, Brown soils, Montane soils, Immature soils, Alluvial soils, Calcareous soils\n\n\n\n\n\nTable 8: Reclassification of the Natural Features component (soil layers) based on The James Hutton Institute (2022).\n\n\n\n\n\n5.3 Rivers\n\n\n\n\n\n\n\n\n\n\nClass\nExample search terms or process\n\n\nMajor river or tributary\nSpecific e.g. “Tay”, “Spey” etc…\n\n\nTidal river or estuary\ntaken from dataset attribute “form”\n\n\nMinor river or tributary\ne.g. “River”, “Abhainn”, “Uisge”\n\n\nNamed minor stream or tributary\ne.g. “Allt”, “Alltan”, “Burn”, “Feadan”, “Sruth”, “Caochan”\n\n\nUnnamed minor stream or tributary\nWaterways with no names\n\n\nCanal\ntaken from dataset attribute “form”\n\n\nLake\ntaken from dataset attribute “form”\n\n\n\n\n\nTable 9: Example search terms for the reclassification of the Water component (river layers) based on Ordnance Survey (2023a). The full table can be downloaded as a .csv by clicking on this link.\n\n\n\n\n\n5.4 Lakes\n\n\n\n\n\n\nClass\nsize (ha)\n\n\n\n\nPond\n\\(&lt;0.2\\)\n\n\nLochan\n\\(0.2-2\\)\n\n\nSmall loch\n\\(2-10\\)\n\n\nMediun loch\n\\(10-100\\)\n\n\nLarge loch\n\\(100-500\\)\n\n\nMajor loch\n\\(&gt;500\\)\n\n\n\n\n\nTable 10: Reclassification of the Water component (lakes layers) based on data from Taylor (2021)."
  },
  {
    "objectID": "tech_supp.html#access-to-code-data",
    "href": "tech_supp.html#access-to-code-data",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Access to code & data",
    "text": "Access to code & data\n\nCode for the Recreational Potential model is available as an R Package hosted on GitHub at https://github.com/BioDT/uc-ces-recreation. These reports relate specifically to the version 1.0 release, which is also available on Zenodo at https://doi.org/10.5281/zenodo.15705544.\nThe model requires some input data that is too large to be bundled in with the package, but which can be downloaded from Dropbox after package installation using biodt.recreation::download_data(). This data is also included in the Zenodo listing.\nThe source for these documents and this website can be found at https://github.com/BioDT/ces-recreation-reports."
  },
  {
    "objectID": "tech_supp.html#funding",
    "href": "tech_supp.html#funding",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Funding",
    "text": "Funding\n\nFunding for OpenNESS came from the European Community’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no 308428, OpenNESS Project (Operationalisation of Natural Capital and Ecosystem Services: From Concepts to Real-world Applications.)\nFunding for BioDT came from the European Union’s Horizon Europe Research and Innovation Programme under grant agreement No 101057437 (BioDT project, https://doi.org/10.3030/101057437). Views and opinions expressed are those of the author(s) only and do not necessarily reflect those of the European Union or the European Commission. Neither the European Union nor the European Commission can be held responsible for them.\nFunding for SPEAK came from the Natural Environment Research Council – Growing Shoots Partnership and application co-creation bursary. NE/Y005805/1 _Growing Shoots."
  },
  {
    "objectID": "tech_supp.html#credit-statement",
    "href": "tech_supp.html#credit-statement",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "CRediT statement",
    "text": "CRediT statement\n\nJMR: software; visualisation; writing. MT: software; visualisation; writing. CA: conceptualisation; data curation; funding acquisition; software. JD: conceptualisation; funding acquisition; project administration. SR: funding acquisition; software."
  },
  {
    "objectID": "tech_supp.html#acknowledgements",
    "href": "tech_supp.html#acknowledgements",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nWe wish to acknowledge significant contributions to a previous version of the Recreational Potential model by Will Bolton. JMR would also like to thank Tomáš Martinovič for assisting with understanding the requirements of BioDT.\nWe are very grateful to all the participants of the SPEAK project which this output is based on including: Alastair Leaver, Alice MacSporran, Brian Cassidy, Chris Pollock, David Giles, Jean Cowie, Joanna Gilliatt, Justyna Olszewska, Laura Taylor, Maddi Bunker, Rebecca MacLennan, S Mayes, Shaila Rao, Steve MacKinnon and Tom Gebbie, Active Stirling. We are equally grateful to an additional 18 participants who preferred to remain anonymous."
  },
  {
    "objectID": "tech_supp.html#correspondence",
    "href": "tech_supp.html#correspondence",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Correspondence",
    "text": "Correspondence\n\n\n{jand,chan}@ceh.ac.uk for enquiries relating to the BioDT or SPEAK projects, or ongoing and future work.\nchan@ceh.ac.uk for enquiries relating to the data sources and QGIS processing.\n{joemar,madtig}@ceh.ac.uk for enquiries relating to the code and anything else appearing in the technical supplement and/or developer’s report.\nsimrol@ceh.ac.uk for enquiries relating to the biodiversity component of the BioDT project."
  },
  {
    "objectID": "tech_supp.html#footnotes",
    "href": "tech_supp.html#footnotes",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nIndeed this is true for almost every type of feature, but these proximity contributions were only computed for roads/paths and water features.↩︎\nThe right-hand-side of Equation 1 can be read as “The set of all 2d coordinates \\(x'\\) for which the condition \\(I_{ij}(x') = 1\\) is satisfied.”↩︎\nThe provenance of these values, which date back to the earliest version of the code, has been lost. The precision with which \\(\\alpha\\) is given is a particular curiosity.↩︎\nNote that this does not exhibit the classic ‘S’ shape of logistic curves since the domain is restricted to the positive real line (distances are non-negative!).↩︎\nIf \\(F(x)\\) is constant in the region of interest then the right-hand-side of Equation 9 diverges and \\(\\hat{F}\\) is undefined.↩︎"
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "The Recreational Potential model has been developed on recent (2025) versions of R — specifically versions 4.4.2 up to 4.5.0. We cannot guarantee that it will work for versions of R outside of this range.\nThe following command tells you what version is currently active:\n\n# Ideally this should be between 4.4.2 and 4.5.0\nR.version.string\n\n[1] \"R version 4.5.1 (2025-06-13)\"\n\n\nCertain C++ libraries are required for the model to work, most importantly related to GDAL. See the terra documentation for guidance.\nIt is recommended to perform the following steps using an R environment managed by renv.\nEnsure you have either remotes or devtools installed (using e.g. install.packages or renv::install).\n\ninstall.packages(\"remotes\")\n\nThe following package(s) will be installed:\n- remotes [2.5.0]\nThese packages will be installed into \"~/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing remotes ...                        OK [linked from cache]\nSuccessfully installed 1 package in 6 milliseconds.\n\n\nNow install the package itself. We will target version 1.0.1\n\nremotes::install_github(\"BioDT/uc-ces-recreation\", ref=\"v1.0\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'biodt.recreation' from a github remote, the SHA1 (c5f60e30) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nNext, you will need to download the input data. The total size is over 2GB, so it is important to set the timeout option to something generous.\n\noptions(timeout=1200)\nbiodt.recreation::download_data()\n\nSkipping download of SLSRA since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/SLSRA.tif already exists.\n\n\nSkipping download of FIPS_N since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/FIPS_N.tif already exists.\n\n\nSkipping download of FIPS_I since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/FIPS_I.tif already exists.\n\n\nSkipping download of Water since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/Water.tif already exists.\n\n\n\n\n\n\n\n\nWhere are the files?\n\n\n\nDo not be alarmed if you cannot see any new files appearing in your working directory. When download_data is called without arguments, the data will be downloaded to the default location which is inside the directory in which the package is installed (under the subdirectory extdata/rasters/Scotland/). You may not know where on your filesystem packages are installed, but that’s ok — the package knows where to look for these files."
  },
  {
    "objectID": "example.html#getting-started",
    "href": "example.html#getting-started",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "",
    "text": "The Recreational Potential model has been developed on recent (2025) versions of R — specifically versions 4.4.2 up to 4.5.0. We cannot guarantee that it will work for versions of R outside of this range.\nThe following command tells you what version is currently active:\n\n# Ideally this should be between 4.4.2 and 4.5.0\nR.version.string\n\n[1] \"R version 4.5.1 (2025-06-13)\"\n\n\nCertain C++ libraries are required for the model to work, most importantly related to GDAL. See the terra documentation for guidance.\nIt is recommended to perform the following steps using an R environment managed by renv.\nEnsure you have either remotes or devtools installed (using e.g. install.packages or renv::install).\n\ninstall.packages(\"remotes\")\n\nThe following package(s) will be installed:\n- remotes [2.5.0]\nThese packages will be installed into \"~/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu\".\n\n# Installing packages --------------------------------------------------------\n- Installing remotes ...                        OK [linked from cache]\nSuccessfully installed 1 package in 6 milliseconds.\n\n\nNow install the package itself. We will target version 1.0.1\n\nremotes::install_github(\"BioDT/uc-ces-recreation\", ref=\"v1.0\")\n\nUsing GitHub PAT from the git credential store.\n\n\nSkipping install of 'biodt.recreation' from a github remote, the SHA1 (c5f60e30) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\nNext, you will need to download the input data. The total size is over 2GB, so it is important to set the timeout option to something generous.\n\noptions(timeout=1200)\nbiodt.recreation::download_data()\n\nSkipping download of SLSRA since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/SLSRA.tif already exists.\n\n\nSkipping download of FIPS_N since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/FIPS_N.tif already exists.\n\n\nSkipping download of FIPS_I since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/FIPS_I.tif already exists.\n\n\nSkipping download of Water since /home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/rasters/Scotland/Water.tif already exists.\n\n\n\n\n\n\n\n\nWhere are the files?\n\n\n\nDo not be alarmed if you cannot see any new files appearing in your working directory. When download_data is called without arguments, the data will be downloaded to the default location which is inside the directory in which the package is installed (under the subdirectory extdata/rasters/Scotland/). You may not know where on your filesystem packages are installed, but that’s ok — the package knows where to look for these files."
  },
  {
    "objectID": "example.html#the-preset-personas",
    "href": "example.html#the-preset-personas",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "The preset personas",
    "text": "The preset personas\nWe first demonstrate the RP Model applied to an area surrounding the Bush estate near Edinburgh2 using two contrasting personas:\n\nHard Recreationalist: this persona values remote, challenging environments and avoids built-up or highly managed areas.\nSoft Recreationalist: this persona values tranquil, accessible landscapes and natural water features, and avoids steep or harsh terrain.\n\nThe resulting maps will illustrate how different preferences lead to different areas being highlighted for recreational value.\nThese personas are provided in the model as ‘presets’; users may customise them or simply use them out-of-the-box.\nFirst, let’s save ourselves some typing of biodt.recreation::&lt;function&gt; by exposing all of the functions in the biodt.recreation namespace.\n\nlibrary(biodt.recreation)\n\nNow we will load the Hard Recreationalist and Soft Recreationalist personas from the presets file.\n\npersona_file &lt;- get_preset_persona_file()\n\nhard_recreationalist &lt;- load_persona(persona_file, \"Hard_Recreationalist\")\n\nLoading persona 'Hard_Recreationalist' from file '/home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/personas/presets.csv'\n\nsoft_recreationalist &lt;- load_persona(persona_file, \"Soft_Recreationalist\")\n\nLoading persona 'Soft_Recreationalist' from file '/home/joe/github.com/BioDT/ces-recreation-reports/renv/library/linux-ubuntu-jammy/R-4.5/x86_64-pc-linux-gnu/biodt.recreation/extdata/personas/presets.csv'\n\n\nThe tab panel below is helpful for inspecting and comparing the two preset personas.\n\n\nShow definition of persona_table and persona_hist\npersona_table &lt;- function(persona) {\n\n  # Construct named vector of persona descriptions\n  config &lt;- load_config()\n  descriptions &lt;- stats::setNames(config$Description, config$Name)\n\n  # Align order (just in case)\n  descriptions &lt;- descriptions[names(persona)]\n\n  # Construct data.frame from the two named vectors\n  df &lt;- data.frame(\n    Item = names(persona),\n    Description = as.vector(descriptions),\n    Score = as.vector(persona)\n  )\n\n  # Convert dataframe to HTML table\n  knitr::kable(df)\n}\n\npersona_hist &lt;- function(persona) {\n\n  # Make 2x2 grid for histograms\n  par(mfrow = c(2, 2))\n\n  for (component in c(\"SLSRA\", \"FIPS_N\", \"FIPS_I\", \"Water\")) {\n\n    # Scores for this component\n    persona_subset &lt;- persona[grep(paste0(\"^\", component), names(persona))]\n\n    # Construct histogram with 11 equally space bins centred on\n    # the integers 0, 1, ..., 10.\n    hist(\n      persona_subset,\n      main=component,\n      breaks=seq(-0.5, 10.5, by=1),\n      xlab=\"Score\",\n      ylab=\"Frequency\"\n    )\n  }\n}\n\n\n\nHard RecreationalistSoft Recreationalist\n\n\n\npersona_hist(hard_recreationalist)\n\n\n\n\n\n\n\n\n\npersona_table(hard_recreationalist)\n\n\n\n\n\n\n\n\n\nItem\nDescription\nScore\n\n\n\n\nFIPS_I_LocalPathNetwork_2\nPath\n5\n\n\nFIPS_I_NationalCycleNetwork_1\nOn Road: Paved Surface\n2\n\n\nFIPS_I_NationalCycleNetwork_2\nTraffic Free: Unpaved Surface\n8\n\n\nFIPS_I_NationalCycleNetwork_3\nTraffic Free: Paved Surface\n6\n\n\nFIPS_I_NationalCycleNetwork_4\nOn Road: Unpaved Surface\n7\n\n\nFIPS_I_RoadsTracks_1\nMotorway\n0\n\n\nFIPS_I_RoadsTracks_2\nA Road\n0\n\n\nFIPS_I_RoadsTracks_3\nB Road\n0\n\n\nFIPS_I_RoadsTracks_4\nMinor or local road\n0\n\n\nFIPS_I_RoadsTracks_5\nAccess roads or Track\n0\n\n\nFIPS_N_Landform_1\nFoothills\n7\n\n\nFIPS_N_Landform_10\nRock Walls\n10\n\n\nFIPS_N_Landform_11\nUplands\n7\n\n\nFIPS_N_Landform_12\nValley sides\n7\n\n\nFIPS_N_Landform_13\nValley bottom\n3\n\n\nFIPS_N_Landform_14\nBuilt-up areas\n1\n\n\nFIPS_N_Landform_15\nSaltings\n0\n\n\nFIPS_N_Landform_16\nHummocks, mounds or moraines\n3\n\n\nFIPS_N_Landform_2\nMountains\n10\n\n\nFIPS_N_Landform_3\nTerraces\n5\n\n\nFIPS_N_Landform_4\nFlood plain\n1\n\n\nFIPS_N_Landform_5\nBeaches or Dunes\n7\n\n\nFIPS_N_Landform_6\nRocks or Scree\n6\n\n\nFIPS_N_Landform_7\nDepressions\n1\n\n\nFIPS_N_Landform_8\nHills\n6\n\n\nFIPS_N_Landform_9\nLowlands\n3\n\n\nFIPS_N_Slope_1\nNo slope\n1\n\n\nFIPS_N_Slope_2\nGentle slope\n1\n\n\nFIPS_N_Slope_3\nMedium slope\n2\n\n\nFIPS_N_Slope_4\nSteep slope\n4\n\n\nFIPS_N_Slope_5\nVery steep slope\n7\n\n\nFIPS_N_Slope_6\nExtremely steep slope\n8\n\n\nFIPS_N_Soil_1\nPeat or Organic\n6\n\n\nFIPS_N_Soil_2\nMineral\n2\n\n\nSLSRA_CP_2\nCountry Park\n1\n\n\nSLSRA_HNV_2\nDesignated High Nature Value (HNV) farmland\n4\n\n\nSLSRA_LCM_1\nAlpine and subalpine grassland\n8\n\n\nSLSRA_LCM_10\nDry grassland\n5\n\n\nSLSRA_LCM_11\nFreshwater\n7\n\n\nSLSRA_LCM_12\nInland cliffs, rock pavements and outcrops\n10\n\n\nSLSRA_LCM_13\nLines of trees, small planted woodlands, early-stage woodland and coppice\n2\n\n\nSLSRA_LCM_14\nLittoral sediment or saltmarsh\n2\n\n\nSLSRA_LCM_15\nMesic grassland\n4\n\n\nSLSRA_LCM_16\nMixed deciduous and coniferous woodland\n5\n\n\nSLSRA_LCM_17\nNon-native coniferous plantation\n2\n\n\nSLSRA_LCM_18\nRaised and blanket bog\n1\n\n\nSLSRA_LCM_19\nRiverine and fen scrubs\n2\n\n\nSLSRA_LCM_2\nArable land and market gardens\n2\n\n\nSLSRA_LCM_20\nRock cliffs, ledges and shores\n10\n\n\nSLSRA_LCM_21\nScots pine woodland\n7\n\n\nSLSRA_LCM_22\nScrees\n5\n\n\nSLSRA_LCM_23\nSeasonally wet and wet grassland\n5\n\n\nSLSRA_LCM_24\nTemperate montane scrub\n7\n\n\nSLSRA_LCM_25\nTemperate shrub heathland\n7\n\n\nSLSRA_LCM_26\nValley mires, poor fens and transition mires\n1\n\n\nSLSRA_LCM_27\nWindthrown woodland\n1\n\n\nSLSRA_LCM_28\nWoodland fringes and clearings and tall forb stands\n1\n\n\nSLSRA_LCM_3\nArctic, alpine and subalpine scrub\n8\n\n\nSLSRA_LCM_4\nBare field or exposed soil\n1\n\n\nSLSRA_LCM_5\nBase-rich fens and calcareous spring mires\n2\n\n\nSLSRA_LCM_6\nBroadleaved deciduous woodland\n7\n\n\nSLSRA_LCM_7\nBuilt-up area\n1\n\n\nSLSRA_LCM_8\nCoastal dunes and sandy shore\n7\n\n\nSLSRA_LCM_9\nCoastal shingle\n3\n\n\nSLSRA_NNR_2\nNational Nature Reserve (NNR)\n6\n\n\nSLSRA_NP_2\nNational Park\n10\n\n\nSLSRA_NR_2\nNature Reserve\n3\n\n\nSLSRA_RP_2\nRegional Park\n2\n\n\nSLSRA_RSPB_2\nRoyal Society for the Protection of Birds (RSPB) Reserve\n1\n\n\nSLSRA_SAC_2\nSpecial Area of Conservation (SAC)\n3\n\n\nSLSRA_SPA_2\nSpecial Protection Area (SPA)\n3\n\n\nSLSRA_SSSI_2\nSite of Special Scientific Interest (SSSI)\n2\n\n\nSLSRA_SWT_2\nScottish Wildlife Trust Reserve\n2\n\n\nSLSRA_WLA_2\nWild Land Areas\n7\n\n\nWater_Lakes_1\nPond\n1\n\n\nWater_Lakes_2\nLochan\n3\n\n\nWater_Lakes_3\nSmall Lochs\n5\n\n\nWater_Lakes_4\nMedium Lochs\n4\n\n\nWater_Lakes_5\nLarge Lochs\n7\n\n\nWater_Lakes_6\nMajor Lochs\n7\n\n\nWater_Rivers_1\nMinor river or tributary\n3\n\n\nWater_Rivers_2\nUnnamed minor stream or tributary\n3\n\n\nWater_Rivers_3\nMajor river or tributary\n7\n\n\nWater_Rivers_4\nNamed minor stream or tributary\n3\n\n\nWater_Rivers_5\nLake\n5\n\n\nWater_Rivers_6\nTidal river or estuary\n4\n\n\nWater_Rivers_7\nCanal\n3\n\n\n\n\n\n\n\n\npersona_hist(soft_recreationalist)\n\n\n\n\n\n\n\n\n\npersona_table(soft_recreationalist)\n\n\n\n\n\n\n\n\n\nItem\nDescription\nScore\n\n\n\n\nFIPS_I_LocalPathNetwork_2\nPath\n7\n\n\nFIPS_I_NationalCycleNetwork_1\nOn Road: Paved Surface\n5\n\n\nFIPS_I_NationalCycleNetwork_2\nTraffic Free: Unpaved Surface\n6\n\n\nFIPS_I_NationalCycleNetwork_3\nTraffic Free: Paved Surface\n10\n\n\nFIPS_I_NationalCycleNetwork_4\nOn Road: Unpaved Surface\n5\n\n\nFIPS_I_RoadsTracks_1\nMotorway\n0\n\n\nFIPS_I_RoadsTracks_2\nA Road\n0\n\n\nFIPS_I_RoadsTracks_3\nB Road\n3\n\n\nFIPS_I_RoadsTracks_4\nMinor or local road\n5\n\n\nFIPS_I_RoadsTracks_5\nAccess roads or Track\n8\n\n\nFIPS_N_Landform_1\nFoothills\n8\n\n\nFIPS_N_Landform_10\nRock Walls\n1\n\n\nFIPS_N_Landform_11\nUplands\n7\n\n\nFIPS_N_Landform_12\nValley sides\n2\n\n\nFIPS_N_Landform_13\nValley bottom\n7\n\n\nFIPS_N_Landform_14\nBuilt-up areas\n1\n\n\nFIPS_N_Landform_15\nSaltings\n0\n\n\nFIPS_N_Landform_16\nHummocks, mounds or moraines\n3\n\n\nFIPS_N_Landform_2\nMountains\n4\n\n\nFIPS_N_Landform_3\nTerraces\n3\n\n\nFIPS_N_Landform_4\nFlood plain\n2\n\n\nFIPS_N_Landform_5\nBeaches or Dunes\n9\n\n\nFIPS_N_Landform_6\nRocks or Scree\n1\n\n\nFIPS_N_Landform_7\nDepressions\n1\n\n\nFIPS_N_Landform_8\nHills\n4\n\n\nFIPS_N_Landform_9\nLowlands\n8\n\n\nFIPS_N_Slope_1\nNo slope\n9\n\n\nFIPS_N_Slope_2\nGentle slope\n8\n\n\nFIPS_N_Slope_3\nMedium slope\n6\n\n\nFIPS_N_Slope_4\nSteep slope\n4\n\n\nFIPS_N_Slope_5\nVery steep slope\n3\n\n\nFIPS_N_Slope_6\nExtremely steep slope\n1\n\n\nFIPS_N_Soil_1\nPeat or Organic\n3\n\n\nFIPS_N_Soil_2\nMineral\n5\n\n\nSLSRA_CP_2\nCountry Park\n8\n\n\nSLSRA_HNV_2\nDesignated High Nature Value (HNV) farmland\n5\n\n\nSLSRA_LCM_1\nAlpine and subalpine grassland\n2\n\n\nSLSRA_LCM_10\nDry grassland\n3\n\n\nSLSRA_LCM_11\nFreshwater\n9\n\n\nSLSRA_LCM_12\nInland cliffs, rock pavements and outcrops\n3\n\n\nSLSRA_LCM_13\nLines of trees, small planted woodlands, early-stage woodland and coppice\n6\n\n\nSLSRA_LCM_14\nLittoral sediment or saltmarsh\n4\n\n\nSLSRA_LCM_15\nMesic grassland\n5\n\n\nSLSRA_LCM_16\nMixed deciduous and coniferous woodland\n9\n\n\nSLSRA_LCM_17\nNon-native coniferous plantation\n7\n\n\nSLSRA_LCM_18\nRaised and blanket bog\n5\n\n\nSLSRA_LCM_19\nRiverine and fen scrubs\n4\n\n\nSLSRA_LCM_2\nArable land and market gardens\n4\n\n\nSLSRA_LCM_20\nRock cliffs, ledges and shores\n6\n\n\nSLSRA_LCM_21\nScots pine woodland\n9\n\n\nSLSRA_LCM_22\nScrees\n1\n\n\nSLSRA_LCM_23\nSeasonally wet and wet grassland\n5\n\n\nSLSRA_LCM_24\nTemperate montane scrub\n3\n\n\nSLSRA_LCM_25\nTemperate shrub heathland\n7\n\n\nSLSRA_LCM_26\nValley mires, poor fens and transition mires\n3\n\n\nSLSRA_LCM_27\nWindthrown woodland\n1\n\n\nSLSRA_LCM_28\nWoodland fringes and clearings and tall forb stands\n3\n\n\nSLSRA_LCM_3\nArctic, alpine and subalpine scrub\n2\n\n\nSLSRA_LCM_4\nBare field or exposed soil\n1\n\n\nSLSRA_LCM_5\nBase-rich fens and calcareous spring mires\n5\n\n\nSLSRA_LCM_6\nBroadleaved deciduous woodland\n9\n\n\nSLSRA_LCM_7\nBuilt-up area\n3\n\n\nSLSRA_LCM_8\nCoastal dunes and sandy shore\n10\n\n\nSLSRA_LCM_9\nCoastal shingle\n6\n\n\nSLSRA_NNR_2\nNational Nature Reserve (NNR)\n7\n\n\nSLSRA_NP_2\nNational Park\n10\n\n\nSLSRA_NR_2\nNature Reserve\n6\n\n\nSLSRA_RP_2\nRegional Park\n4\n\n\nSLSRA_RSPB_2\nRoyal Society for the Protection of Birds (RSPB) Reserve\n6\n\n\nSLSRA_SAC_2\nSpecial Area of Conservation (SAC)\n6\n\n\nSLSRA_SPA_2\nSpecial Protection Area (SPA)\n5\n\n\nSLSRA_SSSI_2\nSite of Special Scientific Interest (SSSI)\n3\n\n\nSLSRA_SWT_2\nScottish Wildlife Trust Reserve\n3\n\n\nSLSRA_WLA_2\nWild Land Areas\n3\n\n\nWater_Lakes_1\nPond\n5\n\n\nWater_Lakes_2\nLochan\n3\n\n\nWater_Lakes_3\nSmall Lochs\n3\n\n\nWater_Lakes_4\nMedium Lochs\n5\n\n\nWater_Lakes_5\nLarge Lochs\n7\n\n\nWater_Lakes_6\nMajor Lochs\n10\n\n\nWater_Rivers_1\nMinor river or tributary\n4\n\n\nWater_Rivers_2\nUnnamed minor stream or tributary\n1\n\n\nWater_Rivers_3\nMajor river or tributary\n8\n\n\nWater_Rivers_4\nNamed minor stream or tributary\n2\n\n\nWater_Rivers_5\nLake\n8\n\n\nWater_Rivers_6\nTidal river or estuary\n7\n\n\nWater_Rivers_7\nCanal\n7"
  },
  {
    "objectID": "example.html#computing-recreational-potential",
    "href": "example.html#computing-recreational-potential",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Computing Recreational Potential",
    "text": "Computing Recreational Potential\nWe will now compare results in the ‘example’ region of interest (the Bush estate).\n\nbbox &lt;- get_example_bbox()\n\nTo compute Recreational Potential, as well as each individual component, we use the compute_potential function.\n\nlayers_hr &lt;- compute_potential(hard_recreationalist, bbox)\n\nSelected an area of 3.1e+07 m^2 .\n\nlayers_sr &lt;- compute_potential(soft_recreationalist, bbox)\n\nSelected an area of 3.1e+07 m^2 .\n\n\nThis returns a raster with 5 named layers.\n\nSLSRA\nFIPS_N\nFIPS_I\nWater\nRecreational_Potential\n\nTo plot all layers together we could simply call terra::plot(layers). However, here we will separate the components plot from the RP plot.\n\n#Set the colour palette for the heatmaps\npalette &lt;- terra::map.pal(\"bgyr\")\n\nFirst, the component layers.\n\nHard RecreationalistSoft Recreationalist\n\n\n\nterra::panel(terra::subset(layers_hr, 1:4), nc=2, col=palette)\n\n\n\n\n\n\n\n\n\n\n\nterra::panel(terra::subset(layers_sr, 1:4), nc=2, col=palette)\n\n\n\n\n\n\n\n\n\n\n\nNext, the Recreational Potential layers.\n\nHard RecreationalistSoft Recreationalist\n\n\n\nterra::plot(layers_hr$Recreational_Potential, col=palette)\n\n\n\n\n\n\n\n\n\n\n\nterra::plot(layers_sr$Recreational_Potential, col=palette)"
  },
  {
    "objectID": "example.html#defining-a-region-of-interest",
    "href": "example.html#defining-a-region-of-interest",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Defining a region of interest",
    "text": "Defining a region of interest\nA rectangular region of interest can be easily constructed using terra::ext by passing a vector of coordinates (xmin, xmax, ymin, ymax).3\n\nxmin &lt;- 300000\nxmax &lt;- 310000\nymin &lt;- 700000\nymax &lt;- 710000\nbbox &lt;- terra::ext(c(xmin, xmax, ymin, ymax))\n\nLet’s visualise this area on a map of Scotland.\n\nScotland &lt;- terra::vect(\n  system.file(\n    \"extdata\", \"shapefiles\", \"Scotland\", \"Scotland.shp\", package=\"biodt.recreation\"\n  )\n)\n\nterra::plot(Scotland)\nterra::plot(bbox, border = \"red\", add = TRUE)"
  },
  {
    "objectID": "example.html#editing-a-persona",
    "href": "example.html#editing-a-persona",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Editing a persona",
    "text": "Editing a persona\nCreating or editing personas is far easier using the Shiny app, some spreadsheet software, or even just a text editor. However, for completeness, we demonstrate how to edit a persona dynamically within R.\nLet’s say we want to modify the Hard Recreationalist persona to better fit an off-road cyclist who does not want to cycle straight up a mountain. We will edit the slope scores and the cycle path scores.\n\n# Note that assignment + edit in R automatically results in a copy!\ncustom_persona &lt;- hard_recreationalist\n\ncustom_persona[[\"FIPS_I_NationalCycleNetwork_1\"]] &lt;- 5  # on-road, paved\ncustom_persona[[\"FIPS_I_NationalCycleNetwork_2\"]] &lt;- 10 # traffic-free, unpaved\ncustom_persona[[\"FIPS_I_NationalCycleNetwork_3\"]] &lt;- 10 # traffic-free, paved\ncustom_persona[[\"FIPS_I_NationalCycleNetwork_4\"]] &lt;- 10 # on-road, unpaved\ncustom_persona[[\"FIPS_I_RoadsTracks_5\"]] &lt;- 8  # access roads / tracks\n\ncustom_persona[[\"FIPS_N_Slope_1\"]] &lt;- 7  # no slope\ncustom_persona[[\"FIPS_N_Slope_2\"]] &lt;- 8  # gentle\ncustom_persona[[\"FIPS_N_Slope_3\"]] &lt;- 6  # medium\ncustom_persona[[\"FIPS_N_Slope_4\"]] &lt;- 4  # steep\ncustom_persona[[\"FIPS_N_Slope_5\"]] &lt;- 2  # very steep\ncustom_persona[[\"FIPS_N_Slope_6\"]] &lt;- 1  # extremely steep\n\nWe can calculate the RP values as before and compare the results.\n\nlayers_hr &lt;- compute_potential(hard_recreationalist, bbox)\n\nSelected an area of 1.0e+08 m^2 .\n\nlayers_custom &lt;- compute_potential(custom_persona, bbox)\n\nSelected an area of 1.0e+08 m^2 .\n\n\n\nHard RecreationalistCustom Persona\n\n\n\nterra::panel(terra::subset(layers_hr, 1:4), nc=2, col=palette)\n\n\n\n\n\n\n\n\n\n\n\nterra::panel(terra::subset(layers_custom, 1:4), nc=2, col=palette)\n\n\n\n\n\n\n\n\n\n\n\n\nHard RecreationalistCustom Persona\n\n\n\nterra::plot(layers_hr$Recreational_Potential, col=palette)\n\n\n\n\n\n\n\n\n\n\n\nterra::plot(layers_custom$Recreational_Potential, col=palette)"
  },
  {
    "objectID": "example.html#interactive-plots",
    "href": "example.html#interactive-plots",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Interactive plots",
    "text": "Interactive plots\nTo create a simple interactive plot is very easy using terra::plet.\n\nterra::plet(layers_custom, 1:5, col=palette, tiles=\"Esri.WorldImagery\", shared=TRUE)\n\n\n\n\n\nYou can explore different background tiles over at https://leaflet-extras.github.io/leaflet-providers/preview/."
  },
  {
    "objectID": "example.html#access-to-code-data",
    "href": "example.html#access-to-code-data",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Access to code & data",
    "text": "Access to code & data\n\nCode for the Recreational Potential model is available as an R Package hosted on GitHub at https://github.com/BioDT/uc-ces-recreation. These reports relate specifically to the version 1.0 release, which is also available on Zenodo at https://doi.org/10.5281/zenodo.15705544.\nThe model requires some input data that is too large to be bundled in with the package, but which can be downloaded from Dropbox after package installation using biodt.recreation::download_data(). This data is also included in the Zenodo listing.\nThe source for these documents and this website can be found at https://github.com/BioDT/ces-recreation-reports."
  },
  {
    "objectID": "example.html#funding",
    "href": "example.html#funding",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Funding",
    "text": "Funding\n\nFunding for OpenNESS came from the European Community’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no 308428, OpenNESS Project (Operationalisation of Natural Capital and Ecosystem Services: From Concepts to Real-world Applications.)\nFunding for BioDT came from the European Union’s Horizon Europe Research and Innovation Programme under grant agreement No 101057437 (BioDT project, https://doi.org/10.3030/101057437). Views and opinions expressed are those of the author(s) only and do not necessarily reflect those of the European Union or the European Commission. Neither the European Union nor the European Commission can be held responsible for them.\nFunding for SPEAK came from the Natural Environment Research Council – Growing Shoots Partnership and application co-creation bursary. NE/Y005805/1 _Growing Shoots."
  },
  {
    "objectID": "example.html#credit-statement",
    "href": "example.html#credit-statement",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "CRediT statement",
    "text": "CRediT statement\n\nJMR: software; visualisation; writing. MT: software; visualisation; writing. CA: conceptualisation; data curation; funding acquisition; software. JD: conceptualisation; funding acquisition; project administration. SR: funding acquisition; software."
  },
  {
    "objectID": "example.html#acknowledgements",
    "href": "example.html#acknowledgements",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Acknowledgements",
    "text": "Acknowledgements\n\nWe wish to acknowledge significant contributions to a previous version of the Recreational Potential model by Will Bolton. JMR would also like to thank Tomáš Martinovič for assisting with understanding the requirements of BioDT.\nWe are very grateful to all the participants of the SPEAK project which this output is based on including: Alastair Leaver, Alice MacSporran, Brian Cassidy, Chris Pollock, David Giles, Jean Cowie, Joanna Gilliatt, Justyna Olszewska, Laura Taylor, Maddi Bunker, Rebecca MacLennan, S Mayes, Shaila Rao, Steve MacKinnon and Tom Gebbie, Active Stirling. We are equally grateful to an additional 18 participants who preferred to remain anonymous."
  },
  {
    "objectID": "example.html#correspondence",
    "href": "example.html#correspondence",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Correspondence",
    "text": "Correspondence\n\n\n{jand,chan}@ceh.ac.uk for enquiries relating to the BioDT or SPEAK projects, or ongoing and future work.\nchan@ceh.ac.uk for enquiries relating to the data sources and QGIS processing.\n{joemar,madtig}@ceh.ac.uk for enquiries relating to the code and anything else appearing in the technical supplement and/or developer’s report.\nsimrol@ceh.ac.uk for enquiries relating to the biodiversity component of the BioDT project."
  },
  {
    "objectID": "example.html#footnotes",
    "href": "example.html#footnotes",
    "title": "The BioDT Recreational Potential Model for Scotland",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSince future updates to the code may be incompatible with this notebook, we will target the specific version released at the time this notebook was written.↩︎\nThis is where the UK Centre for Ecology & Hydrology is based.↩︎\nA region of interest may also be given by a path to a shapefile.↩︎"
  }
]