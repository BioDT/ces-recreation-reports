---
title: The BioDT Recreational Potential Model
subtitle: Worked example
abstract: >
  This notebook demonstrates basic usage of the Recreational Potential model. It is assumed that the user is familiar with installing `R` packages, executing lines of `R` code in interactive sessions, and running `R` scripts. Detailed instructions can be found in the `README.md` files in the [GitHub repository](https://github.com/BioDT/uc-ces-recreation).

number-sections: false
---

## Getting started

The Recreational Potential model has been developed on recent (2025) versions of `R` --- specifically versions 4.4.2 up to 4.5.0. We cannot guarantee that it will work for versions of `R` outside of this range.

The following command tells you what version is currently active:

```{r}
# Ideally this should be between 4.4.2 and 4.5.0
R.version.string
```

<!-- There are also certain C++ libraries that are required by the R packages, and need to be installed on the system. Most importantly is the GDAL library. -->

It is recommended to perform the following steps using an `R` environment managed by [`renv`](https://rstudio.github.io/renv/).

Ensure you have either `remotes` or `devtools` installed (using e.g. `install.packages` or `renv::install`).

```{r}
install.packages("remotes")
```

Now install the package itself.

```{r}
remotes::install_github("BioDT/uc-ces-recreation")
```

Next, you will need to download the input data. The total size is over 2GB, so it is important to set the `timeout` option to something generous.

```{r}
options(timeout=1200)
biodt.recreation::download_data()
```

:::{.callout-tip}
#### Where are the files?
Do not be alarmed if you cannot see any new files appearing in your working directory. When `download_data` is called without arguments, the data will be downloaded to the default location which is _inside the directory in which the package is installed_ (under the subdirectory `extdata/rasters/Scotland/`). You may not know where on your filesystem packages are installed, but that's ok --- the package knows where to look for these files.
:::

## Loading a persona

We demonstrate the RP Model applied to the Bush Estate area (nearby Edinburgh) using two contrasting personas:

1. **_Hard Recreationalist_**: this persona values remote, challenging environments and avoids built-up or highly managed areas.
2. **_Soft Recreationalist_**: this persona values tranquil, accessible landscapes and natural water features, and avoids steep or harsh terrain.

The resulting maps will illustrate how different preferences lead to different areas being highlighted for recreational value.

These personas are provided in the model as 'presets'; users may customise them or simply use them out-of-the-box.

First, let's save ourselves some typing of `biodt.recreation::<function>` by exposing all of the functions in the `biodt.recreation` namespace.

```{r}
library(biodt.recreation)
```

Now we will load the *Hard Recreationalist* and *Soft Recreationalist* personas from the presets file.

```{r}
persona_file <- get_preset_persona_file()

hard_recreationalist <- load_persona(persona_file, "Hard_Recreationalist")
soft_recreationalist <- load_persona(persona_file, "Soft_Recreationalist")
```

Each persona contains 87 scores. It does not tell us very much, but we can view these as a histogram.

```{r}
par(mfrow = c(1, 2))

hist(hard_recreationalist, 
	main = "Hard Recreationalist", 
	breaks = 11,
    xlab = "Score", 
    ylab = "Frequency")

hist(soft_recreationalist, 
	main = "Soft Recreationalist", 
	breaks = 11,
    xlab = "Score", 
    ylab = "Frequency")
```


## Hard versus Soft Recreationalist

Let us compare the two personas in the 'example' region, which is just south of Edinburgh.

```{r}
bbox <- get_example_bbox()
```

To compute Recreational Potential, as well as each individual component, we use the `compute_potential` function. This returns a raster with 5 named layers.

```{r}
layers <- compute_potential(hard_recreationalist, bbox)

names(layers)
```

To plot all layers together we can simply call `terra::plot(layers)`. However, here we will just plot the RP layer.

```{r}
terra::plot(layers[["Recreational_Potential"]])
```

For comparison, here is the RP layer for the _Soft Recreationalist_ persona.

```{r}
layers <- compute_potential(soft_recreationalist, bbox)

terra::plot(layers[["Recreational_Potential"]])
```


## More involved example (to do)

- Create persona and bbox from modification / scratch

A region of interest may be given by a path to a shapefile, but the main supported format is a set of four coordinates defining a rectangular area, or 'bounding box'. These can be easily constructed using [`terra::ext`](https://rspatial.github.io/terra/reference/ext.html) by passing a vector `(xmin, xmax, ymin, ymax)` as its first argument. 


{{< include _endmatter.qmd >}}
